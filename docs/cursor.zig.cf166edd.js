var data = {lines:[
{"lineNum":"    1","line":"// glinka"},
{"lineNum":"    2","line":"// Copyright (C) 2021-2022 Ollie Etherington"},
{"lineNum":"    3","line":"// <www.etherington.io>"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// This program is free software: you can redistribute it and/or modify"},
{"lineNum":"    6","line":"// it under the terms of the GNU Affero General Public License as published"},
{"lineNum":"    7","line":"// by the Free Software Foundation, either version 3 of the License, or"},
{"lineNum":"    8","line":"// (at your option) any later version."},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// This program is distributed in the hope that it will be useful,"},
{"lineNum":"   11","line":"// but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   12","line":"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"},
{"lineNum":"   13","line":"// GNU Affero General Public License for more details."},
{"lineNum":"   14","line":"//"},
{"lineNum":"   15","line":"// You should have received a copy of the GNU Affero General Public License"},
{"lineNum":"   16","line":"// along with this program. If not, see <http://www.gnu.org/licenses/>."},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"const std = @import(\"std\");"},
{"lineNum":"   19","line":"const expectEqual = std.testing.expectEqual;"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"const CursorImpl = u32;"},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"pub const Cursor = struct {"},
{"lineNum":"   24","line":"    ln: CursorImpl,"},
{"lineNum":"   25","line":"    ch: CursorImpl,"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"    pub fn new(ln: CursorImpl, ch: CursorImpl) Cursor {","class":"lineCov","hits":"1","order":"10","possible_hits":"1",},
{"lineNum":"   28","line":"        return Cursor{","class":"lineCov","hits":"1","order":"13","possible_hits":"1",},
{"lineNum":"   29","line":"            .ln = ln,","class":"lineCov","hits":"1","order":"11","possible_hits":"1",},
{"lineNum":"   30","line":"            .ch = ch,","class":"lineCov","hits":"1","order":"12","possible_hits":"1",},
{"lineNum":"   31","line":"        };"},
{"lineNum":"   32","line":"    }"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"    pub fn eql(a: Cursor, b: Cursor) bool {"},
{"lineNum":"   35","line":"        return a.ln == b.ln and a.ch == b.ch;"},
{"lineNum":"   36","line":"    }"},
{"lineNum":"   37","line":"};"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"test \"cursor can be initialized\" {","class":"lineCov","hits":"2","order":"611","possible_hits":"2",},
{"lineNum":"   40","line":"    const ln: CursorImpl = 4;"},
{"lineNum":"   41","line":"    const ch: CursorImpl = 7;"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"    const c = Cursor.new(ln, ch);","class":"lineCov","hits":"1","order":"612","possible_hits":"1",},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"    try expectEqual(ln, c.ln);","class":"lineCov","hits":"1","order":"613","possible_hits":"1",},
{"lineNum":"   46","line":"    try expectEqual(ch, c.ch);","class":"lineCov","hits":"1","order":"614","possible_hits":"1",},
{"lineNum":"   47","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2021-12-30 12:25:10", "instrumented" : 8, "covered" : 8,};
var merged_data = [];
