var data = {lines:[
{"lineNum":"    1","line":"// glinka"},
{"lineNum":"    2","line":"// Copyright (C) 2021-2022 Ollie Etherington"},
{"lineNum":"    3","line":"// <www.etherington.io>"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// This program is free software: you can redistribute it and/or modify"},
{"lineNum":"    6","line":"// it under the terms of the GNU Affero General Public License as published"},
{"lineNum":"    7","line":"// by the Free Software Foundation, either version 3 of the License, or"},
{"lineNum":"    8","line":"// (at your option) any later version."},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// This program is distributed in the hope that it will be useful,"},
{"lineNum":"   11","line":"// but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   12","line":"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"},
{"lineNum":"   13","line":"// GNU Affero General Public License for more details."},
{"lineNum":"   14","line":"//"},
{"lineNum":"   15","line":"// You should have received a copy of the GNU Affero General Public License"},
{"lineNum":"   16","line":"// along with this program. If not, see <http://www.gnu.org/licenses/>."},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"const std = @import(\"std\");"},
{"lineNum":"   19","line":"const Allocator = std.mem.Allocator;"},
{"lineNum":"   20","line":"const node = @import(\"../../common/node.zig\");"},
{"lineNum":"   21","line":"const Node = node.Node;"},
{"lineNum":"   22","line":"const Cursor = @import(\"../../common/cursor.zig\").Cursor;"},
{"lineNum":"   23","line":"const Backend = @import(\"../../common/backend.zig\").Backend;"},
{"lineNum":"   24","line":"const JsBackend = @import(\"js_backend.zig\").JsBackend;"},
{"lineNum":"   25","line":"const EmitTestCase = @import(\"emit_test_case.zig\").EmitTestCase;"},
{"lineNum":"   26","line":"const opToString = @import(\"op_to_string.zig\").opToString;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"pub fn emitExpr(self: JsBackend, value: Node) Backend.Error!void {","class":"lineCov","hits":"2","order":"5553","possible_hits":"2",},
{"lineNum":"   29","line":"    try switch (value.data) {","class":"lineCov","hits":"20","order":"5554","possible_hits":"20",},
{"lineNum":"   30","line":"        .Ident => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"5704","possible_hits":"1",},
{"lineNum":"   31","line":"        .Int => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"5670","possible_hits":"1",},
{"lineNum":"   32","line":"        .Float => |f| self.out.print(\"{s}\", .{f}),","class":"lineCov","hits":"1","order":"6358","possible_hits":"1",},
{"lineNum":"   33","line":"        .String => |s| self.out.print(\"{s}\", .{s}),","class":"lineCov","hits":"1","order":"5669","possible_hits":"1",},
{"lineNum":"   34","line":"        .Template => |t| self.out.print(\"{s}\", .{t}),","class":"lineCov","hits":"1","order":"6171","possible_hits":"1",},
{"lineNum":"   35","line":"        .True => self.out.print(\"true\", .{}),","class":"lineCov","hits":"1","order":"5607","possible_hits":"1",},
{"lineNum":"   36","line":"        .False => self.out.print(\"false\", .{}),","class":"lineCov","hits":"1","order":"5629","possible_hits":"1",},
{"lineNum":"   37","line":"        .Null => self.out.print(\"null\", .{}),","class":"lineCov","hits":"1","order":"5555","possible_hits":"1",},
{"lineNum":"   38","line":"        .Undefined => self.out.print(\"undefined\", .{}),","class":"lineCov","hits":"1","order":"5630","possible_hits":"1",},
{"lineNum":"   39","line":"        .PrefixOp => |op| {","class":"lineCov","hits":"2","order":"6199","possible_hits":"2",},
{"lineNum":"   40","line":"            try self.out.print(\"({s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"6200","possible_hits":"1",},
{"lineNum":"   41","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"6204","possible_hits":"1",},
{"lineNum":"   42","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"6205","possible_hits":"1",},
{"lineNum":"   43","line":"        },"},
{"lineNum":"   44","line":"        .PostfixOp => |op| {","class":"lineCov","hits":"2","order":"6216","possible_hits":"2",},
{"lineNum":"   45","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"6217","possible_hits":"1",},
{"lineNum":"   46","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"6218","possible_hits":"1",},
{"lineNum":"   47","line":"            try self.out.print(\"{s})\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"6219","possible_hits":"1",},
{"lineNum":"   48","line":"        },"},
{"lineNum":"   49","line":"        .BinaryOp => |op| {","class":"lineCov","hits":"2","order":"6232","possible_hits":"2",},
{"lineNum":"   50","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"6233","possible_hits":"1",},
{"lineNum":"   51","line":"            try self.emitExpr(op.left);","class":"lineCov","hits":"1","order":"6234","possible_hits":"1",},
{"lineNum":"   52","line":"            try self.out.print(\"{s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"6235","possible_hits":"1",},
{"lineNum":"   53","line":"            try self.emitExpr(op.right);","class":"lineCov","hits":"1","order":"6237","possible_hits":"1",},
{"lineNum":"   54","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"6238","possible_hits":"1",},
{"lineNum":"   55","line":"        },"},
{"lineNum":"   56","line":"        .Ternary => |trn| {","class":"lineCov","hits":"2","order":"6251","possible_hits":"2",},
{"lineNum":"   57","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"6252","possible_hits":"1",},
{"lineNum":"   58","line":"            try self.emitExpr(trn.cond);","class":"lineCov","hits":"1","order":"6253","possible_hits":"1",},
{"lineNum":"   59","line":"            try self.out.print(\"?\", .{});","class":"lineCov","hits":"1","order":"6254","possible_hits":"1",},
{"lineNum":"   60","line":"            try self.emitExpr(trn.ifTrue);","class":"lineCov","hits":"1","order":"6255","possible_hits":"1",},
{"lineNum":"   61","line":"            try self.out.print(\":\", .{});","class":"lineCov","hits":"1","order":"6256","possible_hits":"1",},
{"lineNum":"   62","line":"            try self.emitExpr(trn.ifFalse);","class":"lineCov","hits":"1","order":"6257","possible_hits":"1",},
{"lineNum":"   63","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"6258","possible_hits":"1",},
{"lineNum":"   64","line":"        },"},
{"lineNum":"   65","line":"        .Call => |call| {","class":"lineCov","hits":"2","order":"6274","possible_hits":"2",},
{"lineNum":"   66","line":"            try self.emitExpr(call.expr);","class":"lineCov","hits":"1","order":"6275","possible_hits":"1",},
{"lineNum":"   67","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"6276","possible_hits":"1",},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"            var prefix: []const u8 = \"\";","class":"lineCov","hits":"1","order":"6277","possible_hits":"1",},
{"lineNum":"   70","line":"            for (call.args.items) |arg| {","class":"lineCov","hits":"2","order":"6278","possible_hits":"2",},
{"lineNum":"   71","line":"                try self.out.print(\"{s}\", .{prefix});","class":"lineCov","hits":"1","order":"6279","possible_hits":"1",},
{"lineNum":"   72","line":"                try self.emitExpr(arg);","class":"lineCov","hits":"1","order":"6280","possible_hits":"1",},
{"lineNum":"   73","line":"                prefix = \", \";","class":"lineCov","hits":"1","order":"6281","possible_hits":"1",},
{"lineNum":"   74","line":"            }"},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"6282","possible_hits":"1",},
{"lineNum":"   77","line":"        },"},
{"lineNum":"   78","line":"        .Array => |arr| {","class":"lineCov","hits":"2","order":"6298","possible_hits":"2",},
{"lineNum":"   79","line":"            try self.out.print(\"[ \", .{});","class":"lineCov","hits":"1","order":"6299","possible_hits":"1",},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"            for (arr.items) |item| {","class":"lineCov","hits":"2","order":"6300","possible_hits":"2",},
{"lineNum":"   82","line":"                try self.emitExpr(item);","class":"lineCov","hits":"1","order":"6301","possible_hits":"1",},
{"lineNum":"   83","line":"                try self.out.print(\", \", .{});","class":"lineCov","hits":"1","order":"6302","possible_hits":"1",},
{"lineNum":"   84","line":"            }"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"6303","possible_hits":"1",},
{"lineNum":"   87","line":"        },"},
{"lineNum":"   88","line":"        .ArrayAccess => |access| {","class":"lineCov","hits":"2","order":"6316","possible_hits":"2",},
{"lineNum":"   89","line":"            try self.emitExpr(access.expr);","class":"lineCov","hits":"1","order":"6317","possible_hits":"1",},
{"lineNum":"   90","line":"            try self.out.print(\"[\", .{});","class":"lineCov","hits":"1","order":"6318","possible_hits":"1",},
{"lineNum":"   91","line":"            try self.emitExpr(access.index);","class":"lineCov","hits":"1","order":"6319","possible_hits":"1",},
{"lineNum":"   92","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"6320","possible_hits":"1",},
{"lineNum":"   93","line":"        },"},
{"lineNum":"   94","line":"        .Dot => |dot| {","class":"lineCov","hits":"2","order":"6332","possible_hits":"2",},
{"lineNum":"   95","line":"            try self.emitExpr(dot.expr);","class":"lineCov","hits":"1","order":"6333","possible_hits":"1",},
{"lineNum":"   96","line":"            try self.out.print(\".{s}\", .{dot.ident});","class":"lineCov","hits":"1","order":"6334","possible_hits":"1",},
{"lineNum":"   97","line":"        },"},
{"lineNum":"   98","line":"        .Object => |obj| {","class":"lineCov","hits":"2","order":"6351","possible_hits":"2",},
{"lineNum":"   99","line":"            try self.out.print(\"{{ \", .{});","class":"lineCov","hits":"1","order":"6352","possible_hits":"1",},
{"lineNum":"  100","line":"            for (obj.items) |prop| {","class":"lineCov","hits":"2","order":"6353","possible_hits":"2",},
{"lineNum":"  101","line":"                try self.emitExpr(prop.key);","class":"lineCov","hits":"1","order":"6354","possible_hits":"1",},
{"lineNum":"  102","line":"                try self.out.print(\": \", .{});","class":"lineCov","hits":"1","order":"6355","possible_hits":"1",},
{"lineNum":"  103","line":"                try self.emitExpr(prop.value);","class":"lineCov","hits":"1","order":"6356","possible_hits":"1",},
{"lineNum":"  104","line":"                try self.out.print(\", \", .{});","class":"lineCov","hits":"1","order":"6357","possible_hits":"1",},
{"lineNum":"  105","line":"            }"},
{"lineNum":"  106","line":"            try self.out.print(\"}}\", .{});","class":"lineCov","hits":"1","order":"6359","possible_hits":"1",},
{"lineNum":"  107","line":"        },"},
{"lineNum":"  108","line":"        .New => |new| {","class":"lineCov","hits":"2","order":"6372","possible_hits":"2",},
{"lineNum":"  109","line":"            try self.out.print(\"new \", .{});","class":"lineCov","hits":"1","order":"6373","possible_hits":"1",},
{"lineNum":"  110","line":"            try self.emitExpr(new);","class":"lineCov","hits":"1","order":"6374","possible_hits":"1",},
{"lineNum":"  111","line":"        },"},
{"lineNum":"  112","line":"        else => std.debug.panic(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  113","line":"            \"Invalid Node type in emitExpr: {?}\","},
{"lineNum":"  114","line":"            .{value},","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"        ),"},
{"lineNum":"  116","line":"    };"},
{"lineNum":"  117","line":"}"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"test \"JsBackend can emit ident expression\" {","class":"lineCov","hits":"2","order":"6146","possible_hits":"2",},
{"lineNum":"  120","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6149","possible_hits":"2",},
{"lineNum":"  121","line":"        .inputNode = EmitTestCase.makeNode(.Ident, \"anIdentifier\"),","class":"lineCov","hits":"1","order":"6147","possible_hits":"1",},
{"lineNum":"  122","line":"        .expectedOutput = \"anIdentifier;\\n\",","class":"lineCov","hits":"1","order":"6148","possible_hits":"1",},
{"lineNum":"  123","line":"    }).run();","class":"lineCov","hits":"1","order":"6150","possible_hits":"1",},
{"lineNum":"  124","line":"}"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"test \"JsBackend can emit int expression\" {","class":"lineCov","hits":"2","order":"6151","possible_hits":"2",},
{"lineNum":"  127","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6154","possible_hits":"2",},
{"lineNum":"  128","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123\"),","class":"lineCov","hits":"1","order":"6152","possible_hits":"1",},
{"lineNum":"  129","line":"        .expectedOutput = \"123;\\n\",","class":"lineCov","hits":"1","order":"6153","possible_hits":"1",},
{"lineNum":"  130","line":"    }).run();","class":"lineCov","hits":"1","order":"6155","possible_hits":"1",},
{"lineNum":"  131","line":"}"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"test \"JsBackend can emit float expression\" {","class":"lineCov","hits":"2","order":"6156","possible_hits":"2",},
{"lineNum":"  134","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6159","possible_hits":"2",},
{"lineNum":"  135","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123.456\"),","class":"lineCov","hits":"1","order":"6157","possible_hits":"1",},
{"lineNum":"  136","line":"        .expectedOutput = \"123.456;\\n\",","class":"lineCov","hits":"1","order":"6158","possible_hits":"1",},
{"lineNum":"  137","line":"    }).run();","class":"lineCov","hits":"1","order":"6160","possible_hits":"1",},
{"lineNum":"  138","line":"}"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"test \"JsBackend can emit string expression\" {","class":"lineCov","hits":"2","order":"6161","possible_hits":"2",},
{"lineNum":"  141","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6164","possible_hits":"2",},
{"lineNum":"  142","line":"        .inputNode = EmitTestCase.makeNode(.String, \"\'a test string\'\"),","class":"lineCov","hits":"1","order":"6162","possible_hits":"1",},
{"lineNum":"  143","line":"        .expectedOutput = \"\'a test string\';\\n\",","class":"lineCov","hits":"1","order":"6163","possible_hits":"1",},
{"lineNum":"  144","line":"    }).run();","class":"lineCov","hits":"1","order":"6165","possible_hits":"1",},
{"lineNum":"  145","line":"}"},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"test \"JsBackend can emit template expression\" {","class":"lineCov","hits":"2","order":"6166","possible_hits":"2",},
{"lineNum":"  148","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6169","possible_hits":"2",},
{"lineNum":"  149","line":"        .inputNode = EmitTestCase.makeNode(.Template, \"`a test template`\"),","class":"lineCov","hits":"1","order":"6167","possible_hits":"1",},
{"lineNum":"  150","line":"        .expectedOutput = \"`a test template`;\\n\",","class":"lineCov","hits":"1","order":"6168","possible_hits":"1",},
{"lineNum":"  151","line":"    }).run();","class":"lineCov","hits":"1","order":"6170","possible_hits":"1",},
{"lineNum":"  152","line":"}"},
{"lineNum":"  153","line":""},
{"lineNum":"  154","line":"test \"JsBackend can emit \'true\' expression\" {","class":"lineCov","hits":"2","order":"6172","possible_hits":"2",},
{"lineNum":"  155","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6175","possible_hits":"2",},
{"lineNum":"  156","line":"        .inputNode = EmitTestCase.makeNode(.True, {}),","class":"lineCov","hits":"1","order":"6173","possible_hits":"1",},
{"lineNum":"  157","line":"        .expectedOutput = \"true;\\n\",","class":"lineCov","hits":"1","order":"6174","possible_hits":"1",},
{"lineNum":"  158","line":"    }).run();","class":"lineCov","hits":"1","order":"6176","possible_hits":"1",},
{"lineNum":"  159","line":"}"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"test \"JsBackend can emit \'false\' expression\" {","class":"lineCov","hits":"2","order":"6177","possible_hits":"2",},
{"lineNum":"  162","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6180","possible_hits":"2",},
{"lineNum":"  163","line":"        .inputNode = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"6178","possible_hits":"1",},
{"lineNum":"  164","line":"        .expectedOutput = \"false;\\n\",","class":"lineCov","hits":"1","order":"6179","possible_hits":"1",},
{"lineNum":"  165","line":"    }).run();","class":"lineCov","hits":"1","order":"6181","possible_hits":"1",},
{"lineNum":"  166","line":"}"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"test \"JsBackend can emit \'null\' expression\" {","class":"lineCov","hits":"2","order":"6182","possible_hits":"2",},
{"lineNum":"  169","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6185","possible_hits":"2",},
{"lineNum":"  170","line":"        .inputNode = EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"6183","possible_hits":"1",},
{"lineNum":"  171","line":"        .expectedOutput = \"null;\\n\",","class":"lineCov","hits":"1","order":"6184","possible_hits":"1",},
{"lineNum":"  172","line":"    }).run();","class":"lineCov","hits":"1","order":"6186","possible_hits":"1",},
{"lineNum":"  173","line":"}"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"test \"JsBackend can emit \'undefined\' expression\" {","class":"lineCov","hits":"2","order":"6187","possible_hits":"2",},
{"lineNum":"  176","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"6190","possible_hits":"2",},
{"lineNum":"  177","line":"        .inputNode = EmitTestCase.makeNode(.Undefined, {}),","class":"lineCov","hits":"1","order":"6188","possible_hits":"1",},
{"lineNum":"  178","line":"        .expectedOutput = \"undefined;\\n\",","class":"lineCov","hits":"1","order":"6189","possible_hits":"1",},
{"lineNum":"  179","line":"    }).run();","class":"lineCov","hits":"1","order":"6191","possible_hits":"1",},
{"lineNum":"  180","line":"}"},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":"test \"JsBackend can emit prefix op expression\" {","class":"lineCov","hits":"2","order":"6192","possible_hits":"2",},
{"lineNum":"  183","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6208","possible_hits":"1",},
{"lineNum":"  184","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6195","possible_hits":"1",},
{"lineNum":"  185","line":"            .PrefixOp,"},
{"lineNum":"  186","line":"            node.UnaryOp{"},
{"lineNum":"  187","line":"                .op = .Inc,","class":"lineCov","hits":"1","order":"6194","possible_hits":"1",},
{"lineNum":"  188","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"6193","possible_hits":"1",},
{"lineNum":"  189","line":"            },"},
{"lineNum":"  190","line":"        ),"},
{"lineNum":"  191","line":"        .expectedOutput = \"(++a);\\n\",","class":"lineCov","hits":"1","order":"6196","possible_hits":"1",},
{"lineNum":"  192","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6197","possible_hits":"1",},
{"lineNum":"  193","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6206","possible_hits":"2",},
{"lineNum":"  194","line":"                alloc.destroy(nd.data.PrefixOp.expr);","class":"linePartCov","hits":"1","order":"6207","possible_hits":"2",},
{"lineNum":"  195","line":"            }"},
{"lineNum":"  196","line":"        }).cleanup,"},
{"lineNum":"  197","line":"    }).run();","class":"lineCov","hits":"1","order":"6198","possible_hits":"1",},
{"lineNum":"  198","line":"}"},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"test \"JsBackend can emit postfix op expression\" {","class":"lineCov","hits":"2","order":"6209","possible_hits":"2",},
{"lineNum":"  201","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6223","possible_hits":"1",},
{"lineNum":"  202","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6212","possible_hits":"1",},
{"lineNum":"  203","line":"            .PostfixOp,"},
{"lineNum":"  204","line":"            node.UnaryOp{"},
{"lineNum":"  205","line":"                .op = .Dec,","class":"lineCov","hits":"1","order":"6211","possible_hits":"1",},
{"lineNum":"  206","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"6210","possible_hits":"1",},
{"lineNum":"  207","line":"            },"},
{"lineNum":"  208","line":"        ),"},
{"lineNum":"  209","line":"        .expectedOutput = \"(a--);\\n\",","class":"lineCov","hits":"1","order":"6213","possible_hits":"1",},
{"lineNum":"  210","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6214","possible_hits":"1",},
{"lineNum":"  211","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6221","possible_hits":"2",},
{"lineNum":"  212","line":"                alloc.destroy(nd.data.PostfixOp.expr);","class":"linePartCov","hits":"1","order":"6222","possible_hits":"2",},
{"lineNum":"  213","line":"            }"},
{"lineNum":"  214","line":"        }).cleanup,"},
{"lineNum":"  215","line":"    }).run();","class":"lineCov","hits":"1","order":"6215","possible_hits":"1",},
{"lineNum":"  216","line":"}"},
{"lineNum":"  217","line":""},
{"lineNum":"  218","line":"test \"JsBackend can emit binary op expression\" {","class":"lineCov","hits":"2","order":"6224","possible_hits":"2",},
{"lineNum":"  219","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6242","possible_hits":"1",},
{"lineNum":"  220","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6228","possible_hits":"1",},
{"lineNum":"  221","line":"            .BinaryOp,"},
{"lineNum":"  222","line":"            node.BinaryOp{"},
{"lineNum":"  223","line":"                .op = .Add,","class":"lineCov","hits":"1","order":"6227","possible_hits":"1",},
{"lineNum":"  224","line":"                .left = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"6225","possible_hits":"1",},
{"lineNum":"  225","line":"                .right = EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"6226","possible_hits":"1",},
{"lineNum":"  226","line":"            },"},
{"lineNum":"  227","line":"        ),"},
{"lineNum":"  228","line":"        .expectedOutput = \"(a+4);\\n\",","class":"lineCov","hits":"1","order":"6229","possible_hits":"1",},
{"lineNum":"  229","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6230","possible_hits":"1",},
{"lineNum":"  230","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6239","possible_hits":"2",},
{"lineNum":"  231","line":"                alloc.destroy(nd.data.BinaryOp.left);","class":"linePartCov","hits":"1","order":"6240","possible_hits":"2",},
{"lineNum":"  232","line":"                alloc.destroy(nd.data.BinaryOp.right);","class":"linePartCov","hits":"2","order":"6241","possible_hits":"3",},
{"lineNum":"  233","line":"            }"},
{"lineNum":"  234","line":"        }).cleanup,"},
{"lineNum":"  235","line":"    }).run();","class":"lineCov","hits":"1","order":"6231","possible_hits":"1",},
{"lineNum":"  236","line":"}"},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"test \"JsBackend can emit ternary expression\" {","class":"lineCov","hits":"2","order":"6243","possible_hits":"2",},
{"lineNum":"  239","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6263","possible_hits":"1",},
{"lineNum":"  240","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6247","possible_hits":"1",},
{"lineNum":"  241","line":"            .Ternary,"},
{"lineNum":"  242","line":"            node.Ternary{"},
{"lineNum":"  243","line":"                .cond = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"6244","possible_hits":"1",},
{"lineNum":"  244","line":"                .ifTrue = EmitTestCase.makeNode(.Int, \"3\"),","class":"lineCov","hits":"1","order":"6245","possible_hits":"1",},
{"lineNum":"  245","line":"                .ifFalse = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"6246","possible_hits":"1",},
{"lineNum":"  246","line":"            },"},
{"lineNum":"  247","line":"        ),"},
{"lineNum":"  248","line":"        .expectedOutput = \"(a?3:false);\\n\",","class":"lineCov","hits":"1","order":"6248","possible_hits":"1",},
{"lineNum":"  249","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6249","possible_hits":"1",},
{"lineNum":"  250","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6259","possible_hits":"2",},
{"lineNum":"  251","line":"                alloc.destroy(nd.data.Ternary.cond);","class":"linePartCov","hits":"1","order":"6260","possible_hits":"2",},
{"lineNum":"  252","line":"                alloc.destroy(nd.data.Ternary.ifTrue);","class":"linePartCov","hits":"2","order":"6261","possible_hits":"3",},
{"lineNum":"  253","line":"                alloc.destroy(nd.data.Ternary.ifFalse);","class":"linePartCov","hits":"2","order":"6262","possible_hits":"3",},
{"lineNum":"  254","line":"            }"},
{"lineNum":"  255","line":"        }).cleanup,"},
{"lineNum":"  256","line":"    }).run();","class":"lineCov","hits":"1","order":"6250","possible_hits":"1",},
{"lineNum":"  257","line":"}"},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"test \"JsBackend can emit function call expression\" {","class":"lineCov","hits":"2","order":"6264","possible_hits":"2",},
{"lineNum":"  260","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6287","possible_hits":"1",},
{"lineNum":"  261","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6270","possible_hits":"1",},
{"lineNum":"  262","line":"            .Call,"},
{"lineNum":"  263","line":"            node.Call{"},
{"lineNum":"  264","line":"                .expr = EmitTestCase.makeNode(.Ident, \"aFunction\"),","class":"lineCov","hits":"1","order":"6265","possible_hits":"1",},
{"lineNum":"  265","line":"                .args = node.NodeList{","class":"lineCov","hits":"1","order":"6269","possible_hits":"1",},
{"lineNum":"  266","line":"                    .items = &[_]Node{","class":"lineCov","hits":"1","order":"6268","possible_hits":"1",},
{"lineNum":"  267","line":"                        EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"6266","possible_hits":"1",},
{"lineNum":"  268","line":"                        EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"6267","possible_hits":"1",},
{"lineNum":"  269","line":"                    },"},
{"lineNum":"  270","line":"                },"},
{"lineNum":"  271","line":"            },"},
{"lineNum":"  272","line":"        ),"},
{"lineNum":"  273","line":"        .expectedOutput = \"aFunction(4, \'a\');\\n\",","class":"lineCov","hits":"1","order":"6271","possible_hits":"1",},
{"lineNum":"  274","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6272","possible_hits":"1",},
{"lineNum":"  275","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6283","possible_hits":"2",},
{"lineNum":"  276","line":"                alloc.destroy(nd.data.Call.expr);","class":"linePartCov","hits":"1","order":"6284","possible_hits":"2",},
{"lineNum":"  277","line":"                alloc.destroy(nd.data.Call.args.items[0]);","class":"lineCov","hits":"2","order":"6285","possible_hits":"2",},
{"lineNum":"  278","line":"                alloc.destroy(nd.data.Call.args.items[1]);","class":"lineCov","hits":"1","order":"6286","possible_hits":"1",},
{"lineNum":"  279","line":"            }"},
{"lineNum":"  280","line":"        }).cleanup,"},
{"lineNum":"  281","line":"    }).run();","class":"lineCov","hits":"1","order":"6273","possible_hits":"1",},
{"lineNum":"  282","line":"}"},
{"lineNum":"  283","line":""},
{"lineNum":"  284","line":"test \"JsBackend can emit array literal expression\" {","class":"lineCov","hits":"2","order":"6288","possible_hits":"2",},
{"lineNum":"  285","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6308","possible_hits":"1",},
{"lineNum":"  286","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6294","possible_hits":"1",},
{"lineNum":"  287","line":"            .Array,"},
{"lineNum":"  288","line":"            node.NodeList{","class":"lineCov","hits":"1","order":"6293","possible_hits":"1",},
{"lineNum":"  289","line":"                .items = &[_]Node{","class":"lineCov","hits":"1","order":"6292","possible_hits":"1",},
{"lineNum":"  290","line":"                    EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"6289","possible_hits":"1",},
{"lineNum":"  291","line":"                    EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"6290","possible_hits":"1",},
{"lineNum":"  292","line":"                    EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"6291","possible_hits":"1",},
{"lineNum":"  293","line":"                },"},
{"lineNum":"  294","line":"            },"},
{"lineNum":"  295","line":"        ),"},
{"lineNum":"  296","line":"        .expectedOutput = \"[ 1, \'a\', null, ];\\n\",","class":"lineCov","hits":"1","order":"6295","possible_hits":"1",},
{"lineNum":"  297","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6296","possible_hits":"1",},
{"lineNum":"  298","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6304","possible_hits":"2",},
{"lineNum":"  299","line":"                alloc.destroy(nd.data.Array.items[0]);","class":"lineCov","hits":"1","order":"6305","possible_hits":"1",},
{"lineNum":"  300","line":"                alloc.destroy(nd.data.Array.items[1]);","class":"lineCov","hits":"1","order":"6306","possible_hits":"1",},
{"lineNum":"  301","line":"                alloc.destroy(nd.data.Array.items[2]);","class":"lineCov","hits":"1","order":"6307","possible_hits":"1",},
{"lineNum":"  302","line":"            }"},
{"lineNum":"  303","line":"        }).cleanup,"},
{"lineNum":"  304","line":"    }).run();","class":"lineCov","hits":"1","order":"6297","possible_hits":"1",},
{"lineNum":"  305","line":"}"},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"test \"JsBackend can emit array access expression\" {","class":"lineCov","hits":"2","order":"6309","possible_hits":"2",},
{"lineNum":"  308","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6324","possible_hits":"1",},
{"lineNum":"  309","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6312","possible_hits":"1",},
{"lineNum":"  310","line":"            .ArrayAccess,"},
{"lineNum":"  311","line":"            node.ArrayAccess{"},
{"lineNum":"  312","line":"                .expr = EmitTestCase.makeNode(.Ident, \"anArray\"),","class":"lineCov","hits":"1","order":"6310","possible_hits":"1",},
{"lineNum":"  313","line":"                .index = EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"6311","possible_hits":"1",},
{"lineNum":"  314","line":"            },"},
{"lineNum":"  315","line":"        ),"},
{"lineNum":"  316","line":"        .expectedOutput = \"anArray[1];\\n\",","class":"lineCov","hits":"1","order":"6313","possible_hits":"1",},
{"lineNum":"  317","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6314","possible_hits":"1",},
{"lineNum":"  318","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6321","possible_hits":"2",},
{"lineNum":"  319","line":"                alloc.destroy(nd.data.ArrayAccess.expr);","class":"linePartCov","hits":"1","order":"6322","possible_hits":"2",},
{"lineNum":"  320","line":"                alloc.destroy(nd.data.ArrayAccess.index);","class":"linePartCov","hits":"2","order":"6323","possible_hits":"3",},
{"lineNum":"  321","line":"            }"},
{"lineNum":"  322","line":"        }).cleanup,"},
{"lineNum":"  323","line":"    }).run();","class":"lineCov","hits":"1","order":"6315","possible_hits":"1",},
{"lineNum":"  324","line":"}"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"test \"JsBackend can emit dot expression\" {","class":"lineCov","hits":"2","order":"6325","possible_hits":"2",},
{"lineNum":"  327","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6337","possible_hits":"1",},
{"lineNum":"  328","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6328","possible_hits":"1",},
{"lineNum":"  329","line":"            .Dot,"},
{"lineNum":"  330","line":"            node.Dot{"},
{"lineNum":"  331","line":"                .expr = EmitTestCase.makeNode(.Ident, \"anObject\"),","class":"lineCov","hits":"1","order":"6326","possible_hits":"1",},
{"lineNum":"  332","line":"                .ident = \"aProperty\",","class":"lineCov","hits":"1","order":"6327","possible_hits":"1",},
{"lineNum":"  333","line":"            },"},
{"lineNum":"  334","line":"        ),"},
{"lineNum":"  335","line":"        .expectedOutput = \"anObject.aProperty;\\n\",","class":"lineCov","hits":"1","order":"6329","possible_hits":"1",},
{"lineNum":"  336","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6330","possible_hits":"1",},
{"lineNum":"  337","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6335","possible_hits":"2",},
{"lineNum":"  338","line":"                alloc.destroy(nd.data.Dot.expr);","class":"linePartCov","hits":"1","order":"6336","possible_hits":"2",},
{"lineNum":"  339","line":"            }"},
{"lineNum":"  340","line":"        }).cleanup,"},
{"lineNum":"  341","line":"    }).run();","class":"lineCov","hits":"1","order":"6331","possible_hits":"1",},
{"lineNum":"  342","line":"}"},
{"lineNum":"  343","line":""},
{"lineNum":"  344","line":"test \"JsBackend can emit object literal expression\" {","class":"lineCov","hits":"2","order":"6338","possible_hits":"2",},
{"lineNum":"  345","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6365","possible_hits":"1",},
{"lineNum":"  346","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6347","possible_hits":"1",},
{"lineNum":"  347","line":"            .Object,"},
{"lineNum":"  348","line":"            node.Object{","class":"lineCov","hits":"1","order":"6346","possible_hits":"1",},
{"lineNum":"  349","line":"                .items = &[_]node.ObjectProperty{","class":"lineCov","hits":"1","order":"6345","possible_hits":"1",},
{"lineNum":"  350","line":"                    node.ObjectProperty.new(","class":"lineCov","hits":"2","order":"6339","possible_hits":"2",},
{"lineNum":"  351","line":"                        EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"6340","possible_hits":"1",},
{"lineNum":"  352","line":"                        EmitTestCase.makeNode(.Int, \"0\"),","class":"lineCov","hits":"1","order":"6341","possible_hits":"1",},
{"lineNum":"  353","line":"                    ),"},
{"lineNum":"  354","line":"                    node.ObjectProperty.new(","class":"lineCov","hits":"2","order":"6342","possible_hits":"2",},
{"lineNum":"  355","line":"                        EmitTestCase.makeNode(.String, \"\'b\'\"),","class":"lineCov","hits":"1","order":"6343","possible_hits":"1",},
{"lineNum":"  356","line":"                        EmitTestCase.makeNode(.Float, \"0.0\"),","class":"lineCov","hits":"1","order":"6344","possible_hits":"1",},
{"lineNum":"  357","line":"                    ),"},
{"lineNum":"  358","line":"                },"},
{"lineNum":"  359","line":"            },"},
{"lineNum":"  360","line":"        ),"},
{"lineNum":"  361","line":"        .expectedOutput = \"{ a: 0, \'b\': 0.0, };\\n\",","class":"lineCov","hits":"1","order":"6348","possible_hits":"1",},
{"lineNum":"  362","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6349","possible_hits":"1",},
{"lineNum":"  363","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6360","possible_hits":"2",},
{"lineNum":"  364","line":"                alloc.destroy(nd.data.Object.items[0].key);","class":"lineCov","hits":"1","order":"6361","possible_hits":"1",},
{"lineNum":"  365","line":"                alloc.destroy(nd.data.Object.items[0].value);","class":"lineCov","hits":"1","order":"6362","possible_hits":"1",},
{"lineNum":"  366","line":"                alloc.destroy(nd.data.Object.items[1].key);","class":"lineCov","hits":"1","order":"6363","possible_hits":"1",},
{"lineNum":"  367","line":"                alloc.destroy(nd.data.Object.items[1].value);","class":"lineCov","hits":"1","order":"6364","possible_hits":"1",},
{"lineNum":"  368","line":"            }"},
{"lineNum":"  369","line":"        }).cleanup,"},
{"lineNum":"  370","line":"    }).run();","class":"lineCov","hits":"1","order":"6350","possible_hits":"1",},
{"lineNum":"  371","line":"}"},
{"lineNum":"  372","line":""},
{"lineNum":"  373","line":"test \"JsBackend can emit new expression\" {","class":"lineCov","hits":"2","order":"6366","possible_hits":"2",},
{"lineNum":"  374","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"6377","possible_hits":"1",},
{"lineNum":"  375","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"6368","possible_hits":"1",},
{"lineNum":"  376","line":"            .New,"},
{"lineNum":"  377","line":"            EmitTestCase.makeNode(.Ident, \"MyClass\"),","class":"lineCov","hits":"1","order":"6367","possible_hits":"1",},
{"lineNum":"  378","line":"        ),"},
{"lineNum":"  379","line":"        .expectedOutput = \"new MyClass;\\n\",","class":"lineCov","hits":"1","order":"6369","possible_hits":"1",},
{"lineNum":"  380","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"6370","possible_hits":"1",},
{"lineNum":"  381","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"6375","possible_hits":"2",},
{"lineNum":"  382","line":"                alloc.destroy(nd.data.New);","class":"linePartCov","hits":"1","order":"6376","possible_hits":"2",},
{"lineNum":"  383","line":"            }"},
{"lineNum":"  384","line":"        }).cleanup,"},
{"lineNum":"  385","line":"    }).run();","class":"lineCov","hits":"1","order":"6371","possible_hits":"1",},
{"lineNum":"  386","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2022-02-05 11:16:48", "instrumented" : 238, "covered" : 236,};
var merged_data = [];
