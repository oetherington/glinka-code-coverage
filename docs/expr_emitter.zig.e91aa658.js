var data = {lines:[
{"lineNum":"    1","line":"// glinka"},
{"lineNum":"    2","line":"// Copyright (C) 2021-2022 Ollie Etherington"},
{"lineNum":"    3","line":"// <www.etherington.io>"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// This program is free software: you can redistribute it and/or modify"},
{"lineNum":"    6","line":"// it under the terms of the GNU Affero General Public License as published"},
{"lineNum":"    7","line":"// by the Free Software Foundation, either version 3 of the License, or"},
{"lineNum":"    8","line":"// (at your option) any later version."},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// This program is distributed in the hope that it will be useful,"},
{"lineNum":"   11","line":"// but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   12","line":"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"},
{"lineNum":"   13","line":"// GNU Affero General Public License for more details."},
{"lineNum":"   14","line":"//"},
{"lineNum":"   15","line":"// You should have received a copy of the GNU Affero General Public License"},
{"lineNum":"   16","line":"// along with this program. If not, see <http://www.gnu.org/licenses/>."},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"const std = @import(\"std\");"},
{"lineNum":"   19","line":"const expectEqualStrings = std.testing.expectEqualStrings;"},
{"lineNum":"   20","line":"const expectError = std.testing.expectError;"},
{"lineNum":"   21","line":"const Allocator = std.mem.Allocator;"},
{"lineNum":"   22","line":"const TokenType = @import(\"../../common/token.zig\").Token.Type;"},
{"lineNum":"   23","line":"const node = @import(\"../../common/node.zig\");"},
{"lineNum":"   24","line":"const Node = node.Node;"},
{"lineNum":"   25","line":"const Cursor = @import(\"../../common/cursor.zig\").Cursor;"},
{"lineNum":"   26","line":"const Backend = @import(\"../../common/backend.zig\").Backend;"},
{"lineNum":"   27","line":"const JsBackend = @import(\"js_backend.zig\").JsBackend;"},
{"lineNum":"   28","line":"const EmitTestCase = @import(\"emit_test_case.zig\").EmitTestCase;"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"fn opToString(op: TokenType) error{InvalidOp}![]const u8 {","class":"lineCov","hits":"1","order":"5329","possible_hits":"1",},
{"lineNum":"   31","line":"    return switch (op) {","class":"lineCov","hits":"48","order":"5330","possible_hits":"48",},
{"lineNum":"   32","line":"        .OptionChain => \".?\",","class":"lineCov","hits":"1","order":"5459","possible_hits":"1",},
{"lineNum":"   33","line":"        .Ellipsis => \"...\",","class":"lineCov","hits":"1","order":"5462","possible_hits":"1",},
{"lineNum":"   34","line":"        .Add => \"+\",","class":"lineCov","hits":"1","order":"5365","possible_hits":"1",},
{"lineNum":"   35","line":"        .AddAssign => \"+=\",","class":"lineCov","hits":"1","order":"5465","possible_hits":"1",},
{"lineNum":"   36","line":"        .Inc => \"++\",","class":"lineCov","hits":"1","order":"5331","possible_hits":"1",},
{"lineNum":"   37","line":"        .Sub => \"-\",","class":"lineCov","hits":"1","order":"5468","possible_hits":"1",},
{"lineNum":"   38","line":"        .SubAssign => \"-=\",","class":"lineCov","hits":"1","order":"5470","possible_hits":"1",},
{"lineNum":"   39","line":"        .Dec => \"--\",","class":"lineCov","hits":"1","order":"5349","possible_hits":"1",},
{"lineNum":"   40","line":"        .Mul => \"*\",","class":"lineCov","hits":"1","order":"5473","possible_hits":"1",},
{"lineNum":"   41","line":"        .MulAssign => \"*=\",","class":"lineCov","hits":"1","order":"5475","possible_hits":"1",},
{"lineNum":"   42","line":"        .Pow => \"**\",","class":"lineCov","hits":"1","order":"5477","possible_hits":"1",},
{"lineNum":"   43","line":"        .PowAssign => \"**=\",","class":"lineCov","hits":"1","order":"5479","possible_hits":"1",},
{"lineNum":"   44","line":"        .Div => \"/\",","class":"lineCov","hits":"1","order":"5481","possible_hits":"1",},
{"lineNum":"   45","line":"        .DivAssign => \"/=\",","class":"lineCov","hits":"1","order":"5483","possible_hits":"1",},
{"lineNum":"   46","line":"        .Mod => \"%\",","class":"lineCov","hits":"1","order":"5485","possible_hits":"1",},
{"lineNum":"   47","line":"        .ModAssign => \"%=\",","class":"lineCov","hits":"1","order":"5487","possible_hits":"1",},
{"lineNum":"   48","line":"        .Assign => \"=\",","class":"lineCov","hits":"1","order":"5489","possible_hits":"1",},
{"lineNum":"   49","line":"        .CmpEq => \"==\",","class":"lineCov","hits":"1","order":"5491","possible_hits":"1",},
{"lineNum":"   50","line":"        .CmpStrictEq => \"===\",","class":"lineCov","hits":"1","order":"5493","possible_hits":"1",},
{"lineNum":"   51","line":"        .LogicalNot => \"!\",","class":"lineCov","hits":"1","order":"5495","possible_hits":"1",},
{"lineNum":"   52","line":"        .CmpNotEq => \"!=\",","class":"lineCov","hits":"1","order":"5497","possible_hits":"1",},
{"lineNum":"   53","line":"        .CmpStrictNotEq => \"!==\",","class":"lineCov","hits":"1","order":"5499","possible_hits":"1",},
{"lineNum":"   54","line":"        .CmpGreater => \">\",","class":"lineCov","hits":"1","order":"5501","possible_hits":"1",},
{"lineNum":"   55","line":"        .CmpGreaterEq => \">=\",","class":"lineCov","hits":"1","order":"5503","possible_hits":"1",},
{"lineNum":"   56","line":"        .CmpLess => \"<\",","class":"lineCov","hits":"1","order":"5505","possible_hits":"1",},
{"lineNum":"   57","line":"        .CmpLessEq => \"<=\",","class":"lineCov","hits":"1","order":"5507","possible_hits":"1",},
{"lineNum":"   58","line":"        .Nullish => \"??\",","class":"lineCov","hits":"1","order":"5509","possible_hits":"1",},
{"lineNum":"   59","line":"        .NullishAssign => \"??=\",","class":"lineCov","hits":"1","order":"5511","possible_hits":"1",},
{"lineNum":"   60","line":"        .BitAnd => \"&\",","class":"lineCov","hits":"1","order":"5513","possible_hits":"1",},
{"lineNum":"   61","line":"        .BitAndAssign => \"&=\",","class":"lineCov","hits":"1","order":"5515","possible_hits":"1",},
{"lineNum":"   62","line":"        .LogicalAnd => \"&&\",","class":"lineCov","hits":"1","order":"5517","possible_hits":"1",},
{"lineNum":"   63","line":"        .LogicalAndAssign => \"&&=\",","class":"lineCov","hits":"1","order":"5519","possible_hits":"1",},
{"lineNum":"   64","line":"        .BitOr => \"|\",","class":"lineCov","hits":"1","order":"5521","possible_hits":"1",},
{"lineNum":"   65","line":"        .BitOrAssign => \"|=\",","class":"lineCov","hits":"1","order":"5523","possible_hits":"1",},
{"lineNum":"   66","line":"        .LogicalOr => \"||\",","class":"lineCov","hits":"1","order":"5525","possible_hits":"1",},
{"lineNum":"   67","line":"        .LogicalOrAssign => \"||=\",","class":"lineCov","hits":"1","order":"5527","possible_hits":"1",},
{"lineNum":"   68","line":"        .BitNot => \"~\",","class":"lineCov","hits":"1","order":"5529","possible_hits":"1",},
{"lineNum":"   69","line":"        .BitNotAssign => \"~=\",","class":"lineCov","hits":"1","order":"5531","possible_hits":"1",},
{"lineNum":"   70","line":"        .BitXor => \"^\",","class":"lineCov","hits":"1","order":"5533","possible_hits":"1",},
{"lineNum":"   71","line":"        .BitXorAssign => \"^=\",","class":"lineCov","hits":"1","order":"5535","possible_hits":"1",},
{"lineNum":"   72","line":"        .ShiftRight => \">>\",","class":"lineCov","hits":"1","order":"5537","possible_hits":"1",},
{"lineNum":"   73","line":"        .ShiftRightAssign => \">>=\",","class":"lineCov","hits":"1","order":"5539","possible_hits":"1",},
{"lineNum":"   74","line":"        .ShiftRightUnsigned => \">>>\",","class":"lineCov","hits":"1","order":"5541","possible_hits":"1",},
{"lineNum":"   75","line":"        .ShiftRightUnsignedAssign => \">>>=\",","class":"lineCov","hits":"1","order":"5543","possible_hits":"1",},
{"lineNum":"   76","line":"        .ShiftLeft => \"<<\",","class":"lineCov","hits":"1","order":"5545","possible_hits":"1",},
{"lineNum":"   77","line":"        .ShiftLeftAssign => \"<<=\",","class":"lineCov","hits":"1","order":"5547","possible_hits":"1",},
{"lineNum":"   78","line":"        else => error.InvalidOp,","class":"lineCov","hits":"1","order":"5550","possible_hits":"1",},
{"lineNum":"   79","line":"    };"},
{"lineNum":"   80","line":"}"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"pub fn emitExpr(self: JsBackend, value: Node) Backend.Error!void {","class":"lineCov","hits":"2","order":"4895","possible_hits":"2",},
{"lineNum":"   83","line":"    try switch (value.data) {","class":"linePartCov","hits":"16","order":"4896","possible_hits":"17",},
{"lineNum":"   84","line":"        .Ident => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"5046","possible_hits":"1",},
{"lineNum":"   85","line":"        .Int => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"5012","possible_hits":"1",},
{"lineNum":"   86","line":"        .Float => |f| self.out.print(\"{s}\", .{f}),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":"        .String => |s| self.out.print(\"{s}\", .{s}),","class":"lineCov","hits":"1","order":"5011","possible_hits":"1",},
{"lineNum":"   88","line":"        .Template => |t| self.out.print(\"{s}\", .{t}),","class":"lineCov","hits":"1","order":"5299","possible_hits":"1",},
{"lineNum":"   89","line":"        .True => self.out.print(\"true\", .{}),","class":"lineCov","hits":"1","order":"4949","possible_hits":"1",},
{"lineNum":"   90","line":"        .False => self.out.print(\"false\", .{}),","class":"lineCov","hits":"1","order":"4971","possible_hits":"1",},
{"lineNum":"   91","line":"        .Null => self.out.print(\"null\", .{}),","class":"lineCov","hits":"1","order":"4897","possible_hits":"1",},
{"lineNum":"   92","line":"        .Undefined => self.out.print(\"undefined\", .{}),","class":"lineCov","hits":"1","order":"4972","possible_hits":"1",},
{"lineNum":"   93","line":"        .PrefixOp => |op| {","class":"lineCov","hits":"2","order":"5327","possible_hits":"2",},
{"lineNum":"   94","line":"            try self.out.print(\"({s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"5328","possible_hits":"1",},
{"lineNum":"   95","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"5332","possible_hits":"1",},
{"lineNum":"   96","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5333","possible_hits":"1",},
{"lineNum":"   97","line":"        },"},
{"lineNum":"   98","line":"        .PostfixOp => |op| {","class":"lineCov","hits":"2","order":"5345","possible_hits":"2",},
{"lineNum":"   99","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5346","possible_hits":"1",},
{"lineNum":"  100","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"5347","possible_hits":"1",},
{"lineNum":"  101","line":"            try self.out.print(\"{s})\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"5348","possible_hits":"1",},
{"lineNum":"  102","line":"        },"},
{"lineNum":"  103","line":"        .BinaryOp => |op| {","class":"lineCov","hits":"2","order":"5361","possible_hits":"2",},
{"lineNum":"  104","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5362","possible_hits":"1",},
{"lineNum":"  105","line":"            try self.emitExpr(op.left);","class":"lineCov","hits":"1","order":"5363","possible_hits":"1",},
{"lineNum":"  106","line":"            try self.out.print(\"{s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"5364","possible_hits":"1",},
{"lineNum":"  107","line":"            try self.emitExpr(op.right);","class":"lineCov","hits":"1","order":"5366","possible_hits":"1",},
{"lineNum":"  108","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5367","possible_hits":"1",},
{"lineNum":"  109","line":"        },"},
{"lineNum":"  110","line":"        .Ternary => |trn| {","class":"lineCov","hits":"2","order":"5380","possible_hits":"2",},
{"lineNum":"  111","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5381","possible_hits":"1",},
{"lineNum":"  112","line":"            try self.emitExpr(trn.cond);","class":"lineCov","hits":"1","order":"5382","possible_hits":"1",},
{"lineNum":"  113","line":"            try self.out.print(\"?\", .{});","class":"lineCov","hits":"1","order":"5383","possible_hits":"1",},
{"lineNum":"  114","line":"            try self.emitExpr(trn.ifTrue);","class":"lineCov","hits":"1","order":"5384","possible_hits":"1",},
{"lineNum":"  115","line":"            try self.out.print(\":\", .{});","class":"lineCov","hits":"1","order":"5385","possible_hits":"1",},
{"lineNum":"  116","line":"            try self.emitExpr(trn.ifFalse);","class":"lineCov","hits":"1","order":"5386","possible_hits":"1",},
{"lineNum":"  117","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5387","possible_hits":"1",},
{"lineNum":"  118","line":"        },"},
{"lineNum":"  119","line":"        .Call => |call| {","class":"lineCov","hits":"2","order":"5403","possible_hits":"2",},
{"lineNum":"  120","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5404","possible_hits":"1",},
{"lineNum":"  121","line":"            try self.emitExpr(call.expr);","class":"lineCov","hits":"1","order":"5405","possible_hits":"1",},
{"lineNum":"  122","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5406","possible_hits":"1",},
{"lineNum":"  123","line":""},
{"lineNum":"  124","line":"            var prefix: []const u8 = \"\";","class":"lineCov","hits":"1","order":"5407","possible_hits":"1",},
{"lineNum":"  125","line":"            for (call.args.items) |arg| {","class":"lineCov","hits":"2","order":"5408","possible_hits":"2",},
{"lineNum":"  126","line":"                try self.out.print(\"{s}\", .{prefix});","class":"lineCov","hits":"1","order":"5409","possible_hits":"1",},
{"lineNum":"  127","line":"                try self.emitExpr(arg);","class":"lineCov","hits":"1","order":"5410","possible_hits":"1",},
{"lineNum":"  128","line":"                prefix = \", \";","class":"lineCov","hits":"1","order":"5411","possible_hits":"1",},
{"lineNum":"  129","line":"            }"},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"            try self.out.print(\"))\", .{});","class":"lineCov","hits":"1","order":"5412","possible_hits":"1",},
{"lineNum":"  132","line":"        },"},
{"lineNum":"  133","line":"        .Array => |arr| {","class":"lineCov","hits":"2","order":"5428","possible_hits":"2",},
{"lineNum":"  134","line":"            try self.out.print(\"[ \", .{});","class":"lineCov","hits":"1","order":"5429","possible_hits":"1",},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"            for (arr.items) |item| {","class":"lineCov","hits":"2","order":"5430","possible_hits":"2",},
{"lineNum":"  137","line":"                try self.emitExpr(item);","class":"lineCov","hits":"1","order":"5431","possible_hits":"1",},
{"lineNum":"  138","line":"                try self.out.print(\", \", .{});","class":"lineCov","hits":"1","order":"5432","possible_hits":"1",},
{"lineNum":"  139","line":"            }"},
{"lineNum":"  140","line":""},
{"lineNum":"  141","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"5433","possible_hits":"1",},
{"lineNum":"  142","line":"        },"},
{"lineNum":"  143","line":"        .ArrayAccess => |access| {","class":"lineCov","hits":"2","order":"5446","possible_hits":"2",},
{"lineNum":"  144","line":"            try self.emitExpr(access.expr);","class":"lineCov","hits":"1","order":"5447","possible_hits":"1",},
{"lineNum":"  145","line":"            try self.out.print(\"[\", .{});","class":"lineCov","hits":"1","order":"5448","possible_hits":"1",},
{"lineNum":"  146","line":"            try self.emitExpr(access.index);","class":"lineCov","hits":"1","order":"5449","possible_hits":"1",},
{"lineNum":"  147","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"5450","possible_hits":"1",},
{"lineNum":"  148","line":"        },"},
{"lineNum":"  149","line":"        else => std.debug.panic(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  150","line":"            \"Invalid Node type in emitExpr: {?}\","},
{"lineNum":"  151","line":"            .{value},","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  152","line":"        ),"},
{"lineNum":"  153","line":"    };"},
{"lineNum":"  154","line":"}"},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"test \"JsBackend can emit ident expression\" {","class":"lineCov","hits":"2","order":"5274","possible_hits":"2",},
{"lineNum":"  157","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5277","possible_hits":"2",},
{"lineNum":"  158","line":"        .inputNode = EmitTestCase.makeNode(.Ident, \"anIdentifier\"),","class":"lineCov","hits":"1","order":"5275","possible_hits":"1",},
{"lineNum":"  159","line":"        .expectedOutput = \"anIdentifier;\\n\",","class":"lineCov","hits":"1","order":"5276","possible_hits":"1",},
{"lineNum":"  160","line":"    }).run();","class":"lineCov","hits":"1","order":"5278","possible_hits":"1",},
{"lineNum":"  161","line":"}"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"test \"JsBackend can emit int expression\" {","class":"lineCov","hits":"2","order":"5279","possible_hits":"2",},
{"lineNum":"  164","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5282","possible_hits":"2",},
{"lineNum":"  165","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123\"),","class":"lineCov","hits":"1","order":"5280","possible_hits":"1",},
{"lineNum":"  166","line":"        .expectedOutput = \"123;\\n\",","class":"lineCov","hits":"1","order":"5281","possible_hits":"1",},
{"lineNum":"  167","line":"    }).run();","class":"lineCov","hits":"1","order":"5283","possible_hits":"1",},
{"lineNum":"  168","line":"}"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"test \"JsBackend can emit float expression\" {","class":"lineCov","hits":"2","order":"5284","possible_hits":"2",},
{"lineNum":"  171","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5287","possible_hits":"2",},
{"lineNum":"  172","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123.456\"),","class":"lineCov","hits":"1","order":"5285","possible_hits":"1",},
{"lineNum":"  173","line":"        .expectedOutput = \"123.456;\\n\",","class":"lineCov","hits":"1","order":"5286","possible_hits":"1",},
{"lineNum":"  174","line":"    }).run();","class":"lineCov","hits":"1","order":"5288","possible_hits":"1",},
{"lineNum":"  175","line":"}"},
{"lineNum":"  176","line":""},
{"lineNum":"  177","line":"test \"JsBackend can emit string expression\" {","class":"lineCov","hits":"2","order":"5289","possible_hits":"2",},
{"lineNum":"  178","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5292","possible_hits":"2",},
{"lineNum":"  179","line":"        .inputNode = EmitTestCase.makeNode(.String, \"\'a test string\'\"),","class":"lineCov","hits":"1","order":"5290","possible_hits":"1",},
{"lineNum":"  180","line":"        .expectedOutput = \"\'a test string\';\\n\",","class":"lineCov","hits":"1","order":"5291","possible_hits":"1",},
{"lineNum":"  181","line":"    }).run();","class":"lineCov","hits":"1","order":"5293","possible_hits":"1",},
{"lineNum":"  182","line":"}"},
{"lineNum":"  183","line":""},
{"lineNum":"  184","line":"test \"JsBackend can emit template expression\" {","class":"lineCov","hits":"2","order":"5294","possible_hits":"2",},
{"lineNum":"  185","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5297","possible_hits":"2",},
{"lineNum":"  186","line":"        .inputNode = EmitTestCase.makeNode(.Template, \"`a test template`\"),","class":"lineCov","hits":"1","order":"5295","possible_hits":"1",},
{"lineNum":"  187","line":"        .expectedOutput = \"`a test template`;\\n\",","class":"lineCov","hits":"1","order":"5296","possible_hits":"1",},
{"lineNum":"  188","line":"    }).run();","class":"lineCov","hits":"1","order":"5298","possible_hits":"1",},
{"lineNum":"  189","line":"}"},
{"lineNum":"  190","line":""},
{"lineNum":"  191","line":"test \"JsBackend can emit \'true\' expression\" {","class":"lineCov","hits":"2","order":"5300","possible_hits":"2",},
{"lineNum":"  192","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5303","possible_hits":"2",},
{"lineNum":"  193","line":"        .inputNode = EmitTestCase.makeNode(.True, {}),","class":"lineCov","hits":"1","order":"5301","possible_hits":"1",},
{"lineNum":"  194","line":"        .expectedOutput = \"true;\\n\",","class":"lineCov","hits":"1","order":"5302","possible_hits":"1",},
{"lineNum":"  195","line":"    }).run();","class":"lineCov","hits":"1","order":"5304","possible_hits":"1",},
{"lineNum":"  196","line":"}"},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"test \"JsBackend can emit \'false\' expression\" {","class":"lineCov","hits":"2","order":"5305","possible_hits":"2",},
{"lineNum":"  199","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5308","possible_hits":"2",},
{"lineNum":"  200","line":"        .inputNode = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"5306","possible_hits":"1",},
{"lineNum":"  201","line":"        .expectedOutput = \"false;\\n\",","class":"lineCov","hits":"1","order":"5307","possible_hits":"1",},
{"lineNum":"  202","line":"    }).run();","class":"lineCov","hits":"1","order":"5309","possible_hits":"1",},
{"lineNum":"  203","line":"}"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"test \"JsBackend can emit \'null\' expression\" {","class":"lineCov","hits":"2","order":"5310","possible_hits":"2",},
{"lineNum":"  206","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5313","possible_hits":"2",},
{"lineNum":"  207","line":"        .inputNode = EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"5311","possible_hits":"1",},
{"lineNum":"  208","line":"        .expectedOutput = \"null;\\n\",","class":"lineCov","hits":"1","order":"5312","possible_hits":"1",},
{"lineNum":"  209","line":"    }).run();","class":"lineCov","hits":"1","order":"5314","possible_hits":"1",},
{"lineNum":"  210","line":"}"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"test \"JsBackend can emit \'undefined\' expression\" {","class":"lineCov","hits":"2","order":"5315","possible_hits":"2",},
{"lineNum":"  213","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5318","possible_hits":"2",},
{"lineNum":"  214","line":"        .inputNode = EmitTestCase.makeNode(.Undefined, {}),","class":"lineCov","hits":"1","order":"5316","possible_hits":"1",},
{"lineNum":"  215","line":"        .expectedOutput = \"undefined;\\n\",","class":"lineCov","hits":"1","order":"5317","possible_hits":"1",},
{"lineNum":"  216","line":"    }).run();","class":"lineCov","hits":"1","order":"5319","possible_hits":"1",},
{"lineNum":"  217","line":"}"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"test \"JsBackend can emit prefix op expression\" {","class":"lineCov","hits":"2","order":"5320","possible_hits":"2",},
{"lineNum":"  220","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5337","possible_hits":"1",},
{"lineNum":"  221","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5323","possible_hits":"1",},
{"lineNum":"  222","line":"            .PrefixOp,"},
{"lineNum":"  223","line":"            node.UnaryOp{"},
{"lineNum":"  224","line":"                .op = .Inc,","class":"lineCov","hits":"1","order":"5322","possible_hits":"1",},
{"lineNum":"  225","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5321","possible_hits":"1",},
{"lineNum":"  226","line":"            },"},
{"lineNum":"  227","line":"        ),"},
{"lineNum":"  228","line":"        .expectedOutput = \"(++a);\\n\",","class":"lineCov","hits":"1","order":"5324","possible_hits":"1",},
{"lineNum":"  229","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5325","possible_hits":"1",},
{"lineNum":"  230","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5335","possible_hits":"2",},
{"lineNum":"  231","line":"                alloc.destroy(nd.data.PrefixOp.expr);","class":"linePartCov","hits":"1","order":"5336","possible_hits":"2",},
{"lineNum":"  232","line":"            }"},
{"lineNum":"  233","line":"        }).cleanup,"},
{"lineNum":"  234","line":"    }).run();","class":"lineCov","hits":"1","order":"5326","possible_hits":"1",},
{"lineNum":"  235","line":"}"},
{"lineNum":"  236","line":""},
{"lineNum":"  237","line":"test \"JsBackend can emit postfix op expression\" {","class":"lineCov","hits":"2","order":"5338","possible_hits":"2",},
{"lineNum":"  238","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5352","possible_hits":"1",},
{"lineNum":"  239","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5341","possible_hits":"1",},
{"lineNum":"  240","line":"            .PostfixOp,"},
{"lineNum":"  241","line":"            node.UnaryOp{"},
{"lineNum":"  242","line":"                .op = .Dec,","class":"lineCov","hits":"1","order":"5340","possible_hits":"1",},
{"lineNum":"  243","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5339","possible_hits":"1",},
{"lineNum":"  244","line":"            },"},
{"lineNum":"  245","line":"        ),"},
{"lineNum":"  246","line":"        .expectedOutput = \"(a--);\\n\",","class":"lineCov","hits":"1","order":"5342","possible_hits":"1",},
{"lineNum":"  247","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5343","possible_hits":"1",},
{"lineNum":"  248","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5350","possible_hits":"2",},
{"lineNum":"  249","line":"                alloc.destroy(nd.data.PostfixOp.expr);","class":"linePartCov","hits":"1","order":"5351","possible_hits":"2",},
{"lineNum":"  250","line":"            }"},
{"lineNum":"  251","line":"        }).cleanup,"},
{"lineNum":"  252","line":"    }).run();","class":"lineCov","hits":"1","order":"5344","possible_hits":"1",},
{"lineNum":"  253","line":"}"},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"test \"JsBackend can emit binary op expression\" {","class":"lineCov","hits":"2","order":"5353","possible_hits":"2",},
{"lineNum":"  256","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5371","possible_hits":"1",},
{"lineNum":"  257","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5357","possible_hits":"1",},
{"lineNum":"  258","line":"            .BinaryOp,"},
{"lineNum":"  259","line":"            node.BinaryOp{"},
{"lineNum":"  260","line":"                .op = .Add,","class":"lineCov","hits":"1","order":"5356","possible_hits":"1",},
{"lineNum":"  261","line":"                .left = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5354","possible_hits":"1",},
{"lineNum":"  262","line":"                .right = EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"5355","possible_hits":"1",},
{"lineNum":"  263","line":"            },"},
{"lineNum":"  264","line":"        ),"},
{"lineNum":"  265","line":"        .expectedOutput = \"(a+4);\\n\",","class":"lineCov","hits":"1","order":"5358","possible_hits":"1",},
{"lineNum":"  266","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5359","possible_hits":"1",},
{"lineNum":"  267","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5368","possible_hits":"2",},
{"lineNum":"  268","line":"                alloc.destroy(nd.data.BinaryOp.left);","class":"linePartCov","hits":"1","order":"5369","possible_hits":"2",},
{"lineNum":"  269","line":"                alloc.destroy(nd.data.BinaryOp.right);","class":"linePartCov","hits":"2","order":"5370","possible_hits":"3",},
{"lineNum":"  270","line":"            }"},
{"lineNum":"  271","line":"        }).cleanup,"},
{"lineNum":"  272","line":"    }).run();","class":"lineCov","hits":"1","order":"5360","possible_hits":"1",},
{"lineNum":"  273","line":"}"},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"test \"JsBackend can emit ternary expression\" {","class":"lineCov","hits":"2","order":"5372","possible_hits":"2",},
{"lineNum":"  276","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5392","possible_hits":"1",},
{"lineNum":"  277","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5376","possible_hits":"1",},
{"lineNum":"  278","line":"            .Ternary,"},
{"lineNum":"  279","line":"            node.Ternary{"},
{"lineNum":"  280","line":"                .cond = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5373","possible_hits":"1",},
{"lineNum":"  281","line":"                .ifTrue = EmitTestCase.makeNode(.Int, \"3\"),","class":"lineCov","hits":"1","order":"5374","possible_hits":"1",},
{"lineNum":"  282","line":"                .ifFalse = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"5375","possible_hits":"1",},
{"lineNum":"  283","line":"            },"},
{"lineNum":"  284","line":"        ),"},
{"lineNum":"  285","line":"        .expectedOutput = \"(a?3:false);\\n\",","class":"lineCov","hits":"1","order":"5377","possible_hits":"1",},
{"lineNum":"  286","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5378","possible_hits":"1",},
{"lineNum":"  287","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5388","possible_hits":"2",},
{"lineNum":"  288","line":"                alloc.destroy(nd.data.Ternary.cond);","class":"linePartCov","hits":"1","order":"5389","possible_hits":"2",},
{"lineNum":"  289","line":"                alloc.destroy(nd.data.Ternary.ifTrue);","class":"linePartCov","hits":"2","order":"5390","possible_hits":"3",},
{"lineNum":"  290","line":"                alloc.destroy(nd.data.Ternary.ifFalse);","class":"linePartCov","hits":"2","order":"5391","possible_hits":"3",},
{"lineNum":"  291","line":"            }"},
{"lineNum":"  292","line":"        }).cleanup,"},
{"lineNum":"  293","line":"    }).run();","class":"lineCov","hits":"1","order":"5379","possible_hits":"1",},
{"lineNum":"  294","line":"}"},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"test \"JsBackend can emit function call expression\" {","class":"lineCov","hits":"2","order":"5393","possible_hits":"2",},
{"lineNum":"  297","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5417","possible_hits":"1",},
{"lineNum":"  298","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5399","possible_hits":"1",},
{"lineNum":"  299","line":"            .Call,"},
{"lineNum":"  300","line":"            node.Call{"},
{"lineNum":"  301","line":"                .expr = EmitTestCase.makeNode(.Ident, \"aFunction\"),","class":"lineCov","hits":"1","order":"5394","possible_hits":"1",},
{"lineNum":"  302","line":"                .args = node.NodeList{","class":"lineCov","hits":"1","order":"5398","possible_hits":"1",},
{"lineNum":"  303","line":"                    .items = &[_]Node{","class":"lineCov","hits":"1","order":"5397","possible_hits":"1",},
{"lineNum":"  304","line":"                        EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"5395","possible_hits":"1",},
{"lineNum":"  305","line":"                        EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"5396","possible_hits":"1",},
{"lineNum":"  306","line":"                    },"},
{"lineNum":"  307","line":"                },"},
{"lineNum":"  308","line":"            },"},
{"lineNum":"  309","line":"        ),"},
{"lineNum":"  310","line":"        .expectedOutput = \"(aFunction(4, \'a\'));\\n\",","class":"lineCov","hits":"1","order":"5400","possible_hits":"1",},
{"lineNum":"  311","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5401","possible_hits":"1",},
{"lineNum":"  312","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5413","possible_hits":"2",},
{"lineNum":"  313","line":"                alloc.destroy(nd.data.Call.expr);","class":"linePartCov","hits":"1","order":"5414","possible_hits":"2",},
{"lineNum":"  314","line":"                alloc.destroy(nd.data.Call.args.items[0]);","class":"lineCov","hits":"2","order":"5415","possible_hits":"2",},
{"lineNum":"  315","line":"                alloc.destroy(nd.data.Call.args.items[1]);","class":"lineCov","hits":"1","order":"5416","possible_hits":"1",},
{"lineNum":"  316","line":"            }"},
{"lineNum":"  317","line":"        }).cleanup,"},
{"lineNum":"  318","line":"    }).run();","class":"lineCov","hits":"1","order":"5402","possible_hits":"1",},
{"lineNum":"  319","line":"}"},
{"lineNum":"  320","line":""},
{"lineNum":"  321","line":"test \"JsBackend can emit array literal expression\" {","class":"lineCov","hits":"2","order":"5418","possible_hits":"2",},
{"lineNum":"  322","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5438","possible_hits":"1",},
{"lineNum":"  323","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5424","possible_hits":"1",},
{"lineNum":"  324","line":"            .Array,"},
{"lineNum":"  325","line":"            node.NodeList{","class":"lineCov","hits":"1","order":"5423","possible_hits":"1",},
{"lineNum":"  326","line":"                .items = &[_]Node{","class":"lineCov","hits":"1","order":"5422","possible_hits":"1",},
{"lineNum":"  327","line":"                    EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"5419","possible_hits":"1",},
{"lineNum":"  328","line":"                    EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"5420","possible_hits":"1",},
{"lineNum":"  329","line":"                    EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"5421","possible_hits":"1",},
{"lineNum":"  330","line":"                },"},
{"lineNum":"  331","line":"            },"},
{"lineNum":"  332","line":"        ),"},
{"lineNum":"  333","line":"        .expectedOutput = \"[ 1, \'a\', null, ];\\n\",","class":"lineCov","hits":"1","order":"5425","possible_hits":"1",},
{"lineNum":"  334","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5426","possible_hits":"1",},
{"lineNum":"  335","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5434","possible_hits":"2",},
{"lineNum":"  336","line":"                alloc.destroy(nd.data.Array.items[0]);","class":"lineCov","hits":"1","order":"5435","possible_hits":"1",},
{"lineNum":"  337","line":"                alloc.destroy(nd.data.Array.items[1]);","class":"lineCov","hits":"1","order":"5436","possible_hits":"1",},
{"lineNum":"  338","line":"                alloc.destroy(nd.data.Array.items[2]);","class":"lineCov","hits":"1","order":"5437","possible_hits":"1",},
{"lineNum":"  339","line":"            }"},
{"lineNum":"  340","line":"        }).cleanup,"},
{"lineNum":"  341","line":"    }).run();","class":"lineCov","hits":"1","order":"5427","possible_hits":"1",},
{"lineNum":"  342","line":"}"},
{"lineNum":"  343","line":""},
{"lineNum":"  344","line":"test \"JsBackend can emit array access expression\" {","class":"lineCov","hits":"2","order":"5439","possible_hits":"2",},
{"lineNum":"  345","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5454","possible_hits":"1",},
{"lineNum":"  346","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5442","possible_hits":"1",},
{"lineNum":"  347","line":"            .ArrayAccess,"},
{"lineNum":"  348","line":"            node.ArrayAccess{"},
{"lineNum":"  349","line":"                .expr = EmitTestCase.makeNode(.Ident, \"anArray\"),","class":"lineCov","hits":"1","order":"5440","possible_hits":"1",},
{"lineNum":"  350","line":"                .index = EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"5441","possible_hits":"1",},
{"lineNum":"  351","line":"            },"},
{"lineNum":"  352","line":"        ),"},
{"lineNum":"  353","line":"        .expectedOutput = \"anArray[1];\\n\",","class":"lineCov","hits":"1","order":"5443","possible_hits":"1",},
{"lineNum":"  354","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5444","possible_hits":"1",},
{"lineNum":"  355","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5451","possible_hits":"2",},
{"lineNum":"  356","line":"                alloc.destroy(nd.data.ArrayAccess.expr);","class":"linePartCov","hits":"1","order":"5452","possible_hits":"2",},
{"lineNum":"  357","line":"                alloc.destroy(nd.data.ArrayAccess.index);","class":"linePartCov","hits":"2","order":"5453","possible_hits":"3",},
{"lineNum":"  358","line":"            }"},
{"lineNum":"  359","line":"        }).cleanup,"},
{"lineNum":"  360","line":"    }).run();","class":"lineCov","hits":"1","order":"5445","possible_hits":"1",},
{"lineNum":"  361","line":"}"},
{"lineNum":"  362","line":""},
{"lineNum":"  363","line":"test \"JSBackend can convert operators to strings\" {","class":"lineCov","hits":"2","order":"5455","possible_hits":"2",},
{"lineNum":"  364","line":"    const TestCase = struct {"},
{"lineNum":"  365","line":"        pub fn run(ty: TokenType, expected: []const u8) !void {","class":"lineCov","hits":"2","order":"5457","possible_hits":"2",},
{"lineNum":"  366","line":"            const str = try opToString(ty);","class":"lineCov","hits":"1","order":"5458","possible_hits":"1",},
{"lineNum":"  367","line":"            try expectEqualStrings(expected, str);","class":"lineCov","hits":"1","order":"5460","possible_hits":"1",},
{"lineNum":"  368","line":"        }"},
{"lineNum":"  369","line":"    };"},
{"lineNum":"  370","line":""},
{"lineNum":"  371","line":"    try TestCase.run(.OptionChain, \".?\");","class":"lineCov","hits":"1","order":"5456","possible_hits":"1",},
{"lineNum":"  372","line":"    try TestCase.run(.Ellipsis, \"...\");","class":"lineCov","hits":"1","order":"5461","possible_hits":"1",},
{"lineNum":"  373","line":"    try TestCase.run(.Add, \"+\");","class":"lineCov","hits":"1","order":"5463","possible_hits":"1",},
{"lineNum":"  374","line":"    try TestCase.run(.AddAssign, \"+=\");","class":"lineCov","hits":"1","order":"5464","possible_hits":"1",},
{"lineNum":"  375","line":"    try TestCase.run(.Inc, \"++\");","class":"lineCov","hits":"1","order":"5466","possible_hits":"1",},
{"lineNum":"  376","line":"    try TestCase.run(.Sub, \"-\");","class":"lineCov","hits":"1","order":"5467","possible_hits":"1",},
{"lineNum":"  377","line":"    try TestCase.run(.SubAssign, \"-=\");","class":"lineCov","hits":"1","order":"5469","possible_hits":"1",},
{"lineNum":"  378","line":"    try TestCase.run(.Dec, \"--\");","class":"lineCov","hits":"1","order":"5471","possible_hits":"1",},
{"lineNum":"  379","line":"    try TestCase.run(.Mul, \"*\");","class":"lineCov","hits":"1","order":"5472","possible_hits":"1",},
{"lineNum":"  380","line":"    try TestCase.run(.MulAssign, \"*=\");","class":"lineCov","hits":"1","order":"5474","possible_hits":"1",},
{"lineNum":"  381","line":"    try TestCase.run(.Pow, \"**\");","class":"lineCov","hits":"1","order":"5476","possible_hits":"1",},
{"lineNum":"  382","line":"    try TestCase.run(.PowAssign, \"**=\");","class":"lineCov","hits":"1","order":"5478","possible_hits":"1",},
{"lineNum":"  383","line":"    try TestCase.run(.Div, \"/\");","class":"lineCov","hits":"1","order":"5480","possible_hits":"1",},
{"lineNum":"  384","line":"    try TestCase.run(.DivAssign, \"/=\");","class":"lineCov","hits":"1","order":"5482","possible_hits":"1",},
{"lineNum":"  385","line":"    try TestCase.run(.Mod, \"%\");","class":"lineCov","hits":"1","order":"5484","possible_hits":"1",},
{"lineNum":"  386","line":"    try TestCase.run(.ModAssign, \"%=\");","class":"lineCov","hits":"1","order":"5486","possible_hits":"1",},
{"lineNum":"  387","line":"    try TestCase.run(.Assign, \"=\");","class":"lineCov","hits":"1","order":"5488","possible_hits":"1",},
{"lineNum":"  388","line":"    try TestCase.run(.CmpEq, \"==\");","class":"lineCov","hits":"1","order":"5490","possible_hits":"1",},
{"lineNum":"  389","line":"    try TestCase.run(.CmpStrictEq, \"===\");","class":"lineCov","hits":"1","order":"5492","possible_hits":"1",},
{"lineNum":"  390","line":"    try TestCase.run(.LogicalNot, \"!\");","class":"lineCov","hits":"1","order":"5494","possible_hits":"1",},
{"lineNum":"  391","line":"    try TestCase.run(.CmpNotEq, \"!=\");","class":"lineCov","hits":"1","order":"5496","possible_hits":"1",},
{"lineNum":"  392","line":"    try TestCase.run(.CmpStrictNotEq, \"!==\");","class":"lineCov","hits":"1","order":"5498","possible_hits":"1",},
{"lineNum":"  393","line":"    try TestCase.run(.CmpGreater, \">\");","class":"lineCov","hits":"1","order":"5500","possible_hits":"1",},
{"lineNum":"  394","line":"    try TestCase.run(.CmpGreaterEq, \">=\");","class":"lineCov","hits":"1","order":"5502","possible_hits":"1",},
{"lineNum":"  395","line":"    try TestCase.run(.CmpLess, \"<\");","class":"lineCov","hits":"1","order":"5504","possible_hits":"1",},
{"lineNum":"  396","line":"    try TestCase.run(.CmpLessEq, \"<=\");","class":"lineCov","hits":"1","order":"5506","possible_hits":"1",},
{"lineNum":"  397","line":"    try TestCase.run(.Nullish, \"??\");","class":"lineCov","hits":"1","order":"5508","possible_hits":"1",},
{"lineNum":"  398","line":"    try TestCase.run(.NullishAssign, \"??=\");","class":"lineCov","hits":"1","order":"5510","possible_hits":"1",},
{"lineNum":"  399","line":"    try TestCase.run(.BitAnd, \"&\");","class":"lineCov","hits":"1","order":"5512","possible_hits":"1",},
{"lineNum":"  400","line":"    try TestCase.run(.BitAndAssign, \"&=\");","class":"lineCov","hits":"1","order":"5514","possible_hits":"1",},
{"lineNum":"  401","line":"    try TestCase.run(.LogicalAnd, \"&&\");","class":"lineCov","hits":"1","order":"5516","possible_hits":"1",},
{"lineNum":"  402","line":"    try TestCase.run(.LogicalAndAssign, \"&&=\");","class":"lineCov","hits":"1","order":"5518","possible_hits":"1",},
{"lineNum":"  403","line":"    try TestCase.run(.BitOr, \"|\");","class":"lineCov","hits":"1","order":"5520","possible_hits":"1",},
{"lineNum":"  404","line":"    try TestCase.run(.BitOrAssign, \"|=\");","class":"lineCov","hits":"1","order":"5522","possible_hits":"1",},
{"lineNum":"  405","line":"    try TestCase.run(.LogicalOr, \"||\");","class":"lineCov","hits":"1","order":"5524","possible_hits":"1",},
{"lineNum":"  406","line":"    try TestCase.run(.LogicalOrAssign, \"||=\");","class":"lineCov","hits":"1","order":"5526","possible_hits":"1",},
{"lineNum":"  407","line":"    try TestCase.run(.BitNot, \"~\");","class":"lineCov","hits":"1","order":"5528","possible_hits":"1",},
{"lineNum":"  408","line":"    try TestCase.run(.BitNotAssign, \"~=\");","class":"lineCov","hits":"1","order":"5530","possible_hits":"1",},
{"lineNum":"  409","line":"    try TestCase.run(.BitXor, \"^\");","class":"lineCov","hits":"1","order":"5532","possible_hits":"1",},
{"lineNum":"  410","line":"    try TestCase.run(.BitXorAssign, \"^=\");","class":"lineCov","hits":"1","order":"5534","possible_hits":"1",},
{"lineNum":"  411","line":"    try TestCase.run(.ShiftRight, \">>\");","class":"lineCov","hits":"1","order":"5536","possible_hits":"1",},
{"lineNum":"  412","line":"    try TestCase.run(.ShiftRightAssign, \">>=\");","class":"lineCov","hits":"1","order":"5538","possible_hits":"1",},
{"lineNum":"  413","line":"    try TestCase.run(.ShiftRightUnsigned, \">>>\");","class":"lineCov","hits":"1","order":"5540","possible_hits":"1",},
{"lineNum":"  414","line":"    try TestCase.run(.ShiftRightUnsignedAssign, \">>>=\");","class":"lineCov","hits":"1","order":"5542","possible_hits":"1",},
{"lineNum":"  415","line":"    try TestCase.run(.ShiftLeft, \"<<\");","class":"lineCov","hits":"1","order":"5544","possible_hits":"1",},
{"lineNum":"  416","line":"    try TestCase.run(.ShiftLeftAssign, \"<<=\");","class":"lineCov","hits":"1","order":"5546","possible_hits":"1",},
{"lineNum":"  417","line":"}"},
{"lineNum":"  418","line":""},
{"lineNum":"  419","line":"test \"JSBackend throws an error for invalid operators\" {","class":"lineCov","hits":"2","order":"5548","possible_hits":"2",},
{"lineNum":"  420","line":"    const ty = TokenType.LBrace;"},
{"lineNum":"  421","line":"    const result = opToString(ty);","class":"lineCov","hits":"1","order":"5549","possible_hits":"1",},
{"lineNum":"  422","line":"    try expectError(error.InvalidOp, result);","class":"lineCov","hits":"1","order":"5551","possible_hits":"1",},
{"lineNum":"  423","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2022-01-10 07:49:02", "instrumented" : 289, "covered" : 286,};
var merged_data = [];
