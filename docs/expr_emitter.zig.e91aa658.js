var data = {lines:[
{"lineNum":"    1","line":"// glinka"},
{"lineNum":"    2","line":"// Copyright (C) 2021-2022 Ollie Etherington"},
{"lineNum":"    3","line":"// <www.etherington.io>"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// This program is free software: you can redistribute it and/or modify"},
{"lineNum":"    6","line":"// it under the terms of the GNU Affero General Public License as published"},
{"lineNum":"    7","line":"// by the Free Software Foundation, either version 3 of the License, or"},
{"lineNum":"    8","line":"// (at your option) any later version."},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// This program is distributed in the hope that it will be useful,"},
{"lineNum":"   11","line":"// but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   12","line":"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"},
{"lineNum":"   13","line":"// GNU Affero General Public License for more details."},
{"lineNum":"   14","line":"//"},
{"lineNum":"   15","line":"// You should have received a copy of the GNU Affero General Public License"},
{"lineNum":"   16","line":"// along with this program. If not, see <http://www.gnu.org/licenses/>."},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"const std = @import(\"std\");"},
{"lineNum":"   19","line":"const Allocator = std.mem.Allocator;"},
{"lineNum":"   20","line":"const node = @import(\"../../common/node.zig\");"},
{"lineNum":"   21","line":"const Node = node.Node;"},
{"lineNum":"   22","line":"const Cursor = @import(\"../../common/cursor.zig\").Cursor;"},
{"lineNum":"   23","line":"const Backend = @import(\"../../common/backend.zig\").Backend;"},
{"lineNum":"   24","line":"const JsBackend = @import(\"js_backend.zig\").JsBackend;"},
{"lineNum":"   25","line":"const EmitTestCase = @import(\"emit_test_case.zig\").EmitTestCase;"},
{"lineNum":"   26","line":"const opToString = @import(\"op_to_string.zig\").opToString;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"pub fn emitExpr(self: JsBackend, value: Node) Backend.Error!void {","class":"lineCov","hits":"2","order":"4909","possible_hits":"2",},
{"lineNum":"   29","line":"    try switch (value.data) {","class":"lineCov","hits":"18","order":"4910","possible_hits":"18",},
{"lineNum":"   30","line":"        .Ident => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"5060","possible_hits":"1",},
{"lineNum":"   31","line":"        .Int => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"5026","possible_hits":"1",},
{"lineNum":"   32","line":"        .Float => |f| self.out.print(\"{s}\", .{f}),","class":"lineCov","hits":"1","order":"5489","possible_hits":"1",},
{"lineNum":"   33","line":"        .String => |s| self.out.print(\"{s}\", .{s}),","class":"lineCov","hits":"1","order":"5025","possible_hits":"1",},
{"lineNum":"   34","line":"        .Template => |t| self.out.print(\"{s}\", .{t}),","class":"lineCov","hits":"1","order":"5313","possible_hits":"1",},
{"lineNum":"   35","line":"        .True => self.out.print(\"true\", .{}),","class":"lineCov","hits":"1","order":"4963","possible_hits":"1",},
{"lineNum":"   36","line":"        .False => self.out.print(\"false\", .{}),","class":"lineCov","hits":"1","order":"4985","possible_hits":"1",},
{"lineNum":"   37","line":"        .Null => self.out.print(\"null\", .{}),","class":"lineCov","hits":"1","order":"4911","possible_hits":"1",},
{"lineNum":"   38","line":"        .Undefined => self.out.print(\"undefined\", .{}),","class":"lineCov","hits":"1","order":"4986","possible_hits":"1",},
{"lineNum":"   39","line":"        .PrefixOp => |op| {","class":"lineCov","hits":"2","order":"5341","possible_hits":"2",},
{"lineNum":"   40","line":"            try self.out.print(\"({s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"5342","possible_hits":"1",},
{"lineNum":"   41","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"5346","possible_hits":"1",},
{"lineNum":"   42","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5347","possible_hits":"1",},
{"lineNum":"   43","line":"        },"},
{"lineNum":"   44","line":"        .PostfixOp => |op| {","class":"lineCov","hits":"2","order":"5359","possible_hits":"2",},
{"lineNum":"   45","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5360","possible_hits":"1",},
{"lineNum":"   46","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"5361","possible_hits":"1",},
{"lineNum":"   47","line":"            try self.out.print(\"{s})\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"5362","possible_hits":"1",},
{"lineNum":"   48","line":"        },"},
{"lineNum":"   49","line":"        .BinaryOp => |op| {","class":"lineCov","hits":"2","order":"5375","possible_hits":"2",},
{"lineNum":"   50","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5376","possible_hits":"1",},
{"lineNum":"   51","line":"            try self.emitExpr(op.left);","class":"lineCov","hits":"1","order":"5377","possible_hits":"1",},
{"lineNum":"   52","line":"            try self.out.print(\"{s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"5378","possible_hits":"1",},
{"lineNum":"   53","line":"            try self.emitExpr(op.right);","class":"lineCov","hits":"1","order":"5380","possible_hits":"1",},
{"lineNum":"   54","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5381","possible_hits":"1",},
{"lineNum":"   55","line":"        },"},
{"lineNum":"   56","line":"        .Ternary => |trn| {","class":"lineCov","hits":"2","order":"5394","possible_hits":"2",},
{"lineNum":"   57","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5395","possible_hits":"1",},
{"lineNum":"   58","line":"            try self.emitExpr(trn.cond);","class":"lineCov","hits":"1","order":"5396","possible_hits":"1",},
{"lineNum":"   59","line":"            try self.out.print(\"?\", .{});","class":"lineCov","hits":"1","order":"5397","possible_hits":"1",},
{"lineNum":"   60","line":"            try self.emitExpr(trn.ifTrue);","class":"lineCov","hits":"1","order":"5398","possible_hits":"1",},
{"lineNum":"   61","line":"            try self.out.print(\":\", .{});","class":"lineCov","hits":"1","order":"5399","possible_hits":"1",},
{"lineNum":"   62","line":"            try self.emitExpr(trn.ifFalse);","class":"lineCov","hits":"1","order":"5400","possible_hits":"1",},
{"lineNum":"   63","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5401","possible_hits":"1",},
{"lineNum":"   64","line":"        },"},
{"lineNum":"   65","line":"        .Call => |call| {","class":"lineCov","hits":"2","order":"5417","possible_hits":"2",},
{"lineNum":"   66","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5418","possible_hits":"1",},
{"lineNum":"   67","line":"            try self.emitExpr(call.expr);","class":"lineCov","hits":"1","order":"5419","possible_hits":"1",},
{"lineNum":"   68","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5420","possible_hits":"1",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"            var prefix: []const u8 = \"\";","class":"lineCov","hits":"1","order":"5421","possible_hits":"1",},
{"lineNum":"   71","line":"            for (call.args.items) |arg| {","class":"lineCov","hits":"2","order":"5422","possible_hits":"2",},
{"lineNum":"   72","line":"                try self.out.print(\"{s}\", .{prefix});","class":"lineCov","hits":"1","order":"5423","possible_hits":"1",},
{"lineNum":"   73","line":"                try self.emitExpr(arg);","class":"lineCov","hits":"1","order":"5424","possible_hits":"1",},
{"lineNum":"   74","line":"                prefix = \", \";","class":"lineCov","hits":"1","order":"5425","possible_hits":"1",},
{"lineNum":"   75","line":"            }"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"            try self.out.print(\"))\", .{});","class":"lineCov","hits":"1","order":"5426","possible_hits":"1",},
{"lineNum":"   78","line":"        },"},
{"lineNum":"   79","line":"        .Array => |arr| {","class":"lineCov","hits":"2","order":"5442","possible_hits":"2",},
{"lineNum":"   80","line":"            try self.out.print(\"[ \", .{});","class":"lineCov","hits":"1","order":"5443","possible_hits":"1",},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"            for (arr.items) |item| {","class":"lineCov","hits":"2","order":"5444","possible_hits":"2",},
{"lineNum":"   83","line":"                try self.emitExpr(item);","class":"lineCov","hits":"1","order":"5445","possible_hits":"1",},
{"lineNum":"   84","line":"                try self.out.print(\", \", .{});","class":"lineCov","hits":"1","order":"5446","possible_hits":"1",},
{"lineNum":"   85","line":"            }"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"5447","possible_hits":"1",},
{"lineNum":"   88","line":"        },"},
{"lineNum":"   89","line":"        .ArrayAccess => |access| {","class":"lineCov","hits":"2","order":"5460","possible_hits":"2",},
{"lineNum":"   90","line":"            try self.emitExpr(access.expr);","class":"lineCov","hits":"1","order":"5461","possible_hits":"1",},
{"lineNum":"   91","line":"            try self.out.print(\"[\", .{});","class":"lineCov","hits":"1","order":"5462","possible_hits":"1",},
{"lineNum":"   92","line":"            try self.emitExpr(access.index);","class":"lineCov","hits":"1","order":"5463","possible_hits":"1",},
{"lineNum":"   93","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"5464","possible_hits":"1",},
{"lineNum":"   94","line":"        },"},
{"lineNum":"   95","line":"        .Object => |obj| {","class":"lineCov","hits":"2","order":"5482","possible_hits":"2",},
{"lineNum":"   96","line":"            try self.out.print(\"{{ \", .{});","class":"lineCov","hits":"1","order":"5483","possible_hits":"1",},
{"lineNum":"   97","line":"            for (obj.items) |prop| {","class":"lineCov","hits":"2","order":"5484","possible_hits":"2",},
{"lineNum":"   98","line":"                try self.emitExpr(prop.key);","class":"lineCov","hits":"1","order":"5485","possible_hits":"1",},
{"lineNum":"   99","line":"                try self.out.print(\": \", .{});","class":"lineCov","hits":"1","order":"5486","possible_hits":"1",},
{"lineNum":"  100","line":"                try self.emitExpr(prop.value);","class":"lineCov","hits":"1","order":"5487","possible_hits":"1",},
{"lineNum":"  101","line":"                try self.out.print(\", \", .{});","class":"lineCov","hits":"1","order":"5488","possible_hits":"1",},
{"lineNum":"  102","line":"            }"},
{"lineNum":"  103","line":"            try self.out.print(\"}}\", .{});","class":"lineCov","hits":"1","order":"5490","possible_hits":"1",},
{"lineNum":"  104","line":"        },"},
{"lineNum":"  105","line":"        else => std.debug.panic(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  106","line":"            \"Invalid Node type in emitExpr: {?}\","},
{"lineNum":"  107","line":"            .{value},","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":"        ),"},
{"lineNum":"  109","line":"    };"},
{"lineNum":"  110","line":"}"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"test \"JsBackend can emit ident expression\" {","class":"lineCov","hits":"2","order":"5288","possible_hits":"2",},
{"lineNum":"  113","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5291","possible_hits":"2",},
{"lineNum":"  114","line":"        .inputNode = EmitTestCase.makeNode(.Ident, \"anIdentifier\"),","class":"lineCov","hits":"1","order":"5289","possible_hits":"1",},
{"lineNum":"  115","line":"        .expectedOutput = \"anIdentifier;\\n\",","class":"lineCov","hits":"1","order":"5290","possible_hits":"1",},
{"lineNum":"  116","line":"    }).run();","class":"lineCov","hits":"1","order":"5292","possible_hits":"1",},
{"lineNum":"  117","line":"}"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"test \"JsBackend can emit int expression\" {","class":"lineCov","hits":"2","order":"5293","possible_hits":"2",},
{"lineNum":"  120","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5296","possible_hits":"2",},
{"lineNum":"  121","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123\"),","class":"lineCov","hits":"1","order":"5294","possible_hits":"1",},
{"lineNum":"  122","line":"        .expectedOutput = \"123;\\n\",","class":"lineCov","hits":"1","order":"5295","possible_hits":"1",},
{"lineNum":"  123","line":"    }).run();","class":"lineCov","hits":"1","order":"5297","possible_hits":"1",},
{"lineNum":"  124","line":"}"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"test \"JsBackend can emit float expression\" {","class":"lineCov","hits":"2","order":"5298","possible_hits":"2",},
{"lineNum":"  127","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5301","possible_hits":"2",},
{"lineNum":"  128","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123.456\"),","class":"lineCov","hits":"1","order":"5299","possible_hits":"1",},
{"lineNum":"  129","line":"        .expectedOutput = \"123.456;\\n\",","class":"lineCov","hits":"1","order":"5300","possible_hits":"1",},
{"lineNum":"  130","line":"    }).run();","class":"lineCov","hits":"1","order":"5302","possible_hits":"1",},
{"lineNum":"  131","line":"}"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"test \"JsBackend can emit string expression\" {","class":"lineCov","hits":"2","order":"5303","possible_hits":"2",},
{"lineNum":"  134","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5306","possible_hits":"2",},
{"lineNum":"  135","line":"        .inputNode = EmitTestCase.makeNode(.String, \"\'a test string\'\"),","class":"lineCov","hits":"1","order":"5304","possible_hits":"1",},
{"lineNum":"  136","line":"        .expectedOutput = \"\'a test string\';\\n\",","class":"lineCov","hits":"1","order":"5305","possible_hits":"1",},
{"lineNum":"  137","line":"    }).run();","class":"lineCov","hits":"1","order":"5307","possible_hits":"1",},
{"lineNum":"  138","line":"}"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"test \"JsBackend can emit template expression\" {","class":"lineCov","hits":"2","order":"5308","possible_hits":"2",},
{"lineNum":"  141","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5311","possible_hits":"2",},
{"lineNum":"  142","line":"        .inputNode = EmitTestCase.makeNode(.Template, \"`a test template`\"),","class":"lineCov","hits":"1","order":"5309","possible_hits":"1",},
{"lineNum":"  143","line":"        .expectedOutput = \"`a test template`;\\n\",","class":"lineCov","hits":"1","order":"5310","possible_hits":"1",},
{"lineNum":"  144","line":"    }).run();","class":"lineCov","hits":"1","order":"5312","possible_hits":"1",},
{"lineNum":"  145","line":"}"},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"test \"JsBackend can emit \'true\' expression\" {","class":"lineCov","hits":"2","order":"5314","possible_hits":"2",},
{"lineNum":"  148","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5317","possible_hits":"2",},
{"lineNum":"  149","line":"        .inputNode = EmitTestCase.makeNode(.True, {}),","class":"lineCov","hits":"1","order":"5315","possible_hits":"1",},
{"lineNum":"  150","line":"        .expectedOutput = \"true;\\n\",","class":"lineCov","hits":"1","order":"5316","possible_hits":"1",},
{"lineNum":"  151","line":"    }).run();","class":"lineCov","hits":"1","order":"5318","possible_hits":"1",},
{"lineNum":"  152","line":"}"},
{"lineNum":"  153","line":""},
{"lineNum":"  154","line":"test \"JsBackend can emit \'false\' expression\" {","class":"lineCov","hits":"2","order":"5319","possible_hits":"2",},
{"lineNum":"  155","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5322","possible_hits":"2",},
{"lineNum":"  156","line":"        .inputNode = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"5320","possible_hits":"1",},
{"lineNum":"  157","line":"        .expectedOutput = \"false;\\n\",","class":"lineCov","hits":"1","order":"5321","possible_hits":"1",},
{"lineNum":"  158","line":"    }).run();","class":"lineCov","hits":"1","order":"5323","possible_hits":"1",},
{"lineNum":"  159","line":"}"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"test \"JsBackend can emit \'null\' expression\" {","class":"lineCov","hits":"2","order":"5324","possible_hits":"2",},
{"lineNum":"  162","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5327","possible_hits":"2",},
{"lineNum":"  163","line":"        .inputNode = EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"5325","possible_hits":"1",},
{"lineNum":"  164","line":"        .expectedOutput = \"null;\\n\",","class":"lineCov","hits":"1","order":"5326","possible_hits":"1",},
{"lineNum":"  165","line":"    }).run();","class":"lineCov","hits":"1","order":"5328","possible_hits":"1",},
{"lineNum":"  166","line":"}"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"test \"JsBackend can emit \'undefined\' expression\" {","class":"lineCov","hits":"2","order":"5329","possible_hits":"2",},
{"lineNum":"  169","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"5332","possible_hits":"2",},
{"lineNum":"  170","line":"        .inputNode = EmitTestCase.makeNode(.Undefined, {}),","class":"lineCov","hits":"1","order":"5330","possible_hits":"1",},
{"lineNum":"  171","line":"        .expectedOutput = \"undefined;\\n\",","class":"lineCov","hits":"1","order":"5331","possible_hits":"1",},
{"lineNum":"  172","line":"    }).run();","class":"lineCov","hits":"1","order":"5333","possible_hits":"1",},
{"lineNum":"  173","line":"}"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"test \"JsBackend can emit prefix op expression\" {","class":"lineCov","hits":"2","order":"5334","possible_hits":"2",},
{"lineNum":"  176","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5351","possible_hits":"1",},
{"lineNum":"  177","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5337","possible_hits":"1",},
{"lineNum":"  178","line":"            .PrefixOp,"},
{"lineNum":"  179","line":"            node.UnaryOp{"},
{"lineNum":"  180","line":"                .op = .Inc,","class":"lineCov","hits":"1","order":"5336","possible_hits":"1",},
{"lineNum":"  181","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5335","possible_hits":"1",},
{"lineNum":"  182","line":"            },"},
{"lineNum":"  183","line":"        ),"},
{"lineNum":"  184","line":"        .expectedOutput = \"(++a);\\n\",","class":"lineCov","hits":"1","order":"5338","possible_hits":"1",},
{"lineNum":"  185","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5339","possible_hits":"1",},
{"lineNum":"  186","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5349","possible_hits":"2",},
{"lineNum":"  187","line":"                alloc.destroy(nd.data.PrefixOp.expr);","class":"linePartCov","hits":"1","order":"5350","possible_hits":"2",},
{"lineNum":"  188","line":"            }"},
{"lineNum":"  189","line":"        }).cleanup,"},
{"lineNum":"  190","line":"    }).run();","class":"lineCov","hits":"1","order":"5340","possible_hits":"1",},
{"lineNum":"  191","line":"}"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"test \"JsBackend can emit postfix op expression\" {","class":"lineCov","hits":"2","order":"5352","possible_hits":"2",},
{"lineNum":"  194","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5366","possible_hits":"1",},
{"lineNum":"  195","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5355","possible_hits":"1",},
{"lineNum":"  196","line":"            .PostfixOp,"},
{"lineNum":"  197","line":"            node.UnaryOp{"},
{"lineNum":"  198","line":"                .op = .Dec,","class":"lineCov","hits":"1","order":"5354","possible_hits":"1",},
{"lineNum":"  199","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5353","possible_hits":"1",},
{"lineNum":"  200","line":"            },"},
{"lineNum":"  201","line":"        ),"},
{"lineNum":"  202","line":"        .expectedOutput = \"(a--);\\n\",","class":"lineCov","hits":"1","order":"5356","possible_hits":"1",},
{"lineNum":"  203","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5357","possible_hits":"1",},
{"lineNum":"  204","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5364","possible_hits":"2",},
{"lineNum":"  205","line":"                alloc.destroy(nd.data.PostfixOp.expr);","class":"linePartCov","hits":"1","order":"5365","possible_hits":"2",},
{"lineNum":"  206","line":"            }"},
{"lineNum":"  207","line":"        }).cleanup,"},
{"lineNum":"  208","line":"    }).run();","class":"lineCov","hits":"1","order":"5358","possible_hits":"1",},
{"lineNum":"  209","line":"}"},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"test \"JsBackend can emit binary op expression\" {","class":"lineCov","hits":"2","order":"5367","possible_hits":"2",},
{"lineNum":"  212","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5385","possible_hits":"1",},
{"lineNum":"  213","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5371","possible_hits":"1",},
{"lineNum":"  214","line":"            .BinaryOp,"},
{"lineNum":"  215","line":"            node.BinaryOp{"},
{"lineNum":"  216","line":"                .op = .Add,","class":"lineCov","hits":"1","order":"5370","possible_hits":"1",},
{"lineNum":"  217","line":"                .left = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5368","possible_hits":"1",},
{"lineNum":"  218","line":"                .right = EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"5369","possible_hits":"1",},
{"lineNum":"  219","line":"            },"},
{"lineNum":"  220","line":"        ),"},
{"lineNum":"  221","line":"        .expectedOutput = \"(a+4);\\n\",","class":"lineCov","hits":"1","order":"5372","possible_hits":"1",},
{"lineNum":"  222","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5373","possible_hits":"1",},
{"lineNum":"  223","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5382","possible_hits":"2",},
{"lineNum":"  224","line":"                alloc.destroy(nd.data.BinaryOp.left);","class":"linePartCov","hits":"1","order":"5383","possible_hits":"2",},
{"lineNum":"  225","line":"                alloc.destroy(nd.data.BinaryOp.right);","class":"linePartCov","hits":"2","order":"5384","possible_hits":"3",},
{"lineNum":"  226","line":"            }"},
{"lineNum":"  227","line":"        }).cleanup,"},
{"lineNum":"  228","line":"    }).run();","class":"lineCov","hits":"1","order":"5374","possible_hits":"1",},
{"lineNum":"  229","line":"}"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"test \"JsBackend can emit ternary expression\" {","class":"lineCov","hits":"2","order":"5386","possible_hits":"2",},
{"lineNum":"  232","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5406","possible_hits":"1",},
{"lineNum":"  233","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5390","possible_hits":"1",},
{"lineNum":"  234","line":"            .Ternary,"},
{"lineNum":"  235","line":"            node.Ternary{"},
{"lineNum":"  236","line":"                .cond = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5387","possible_hits":"1",},
{"lineNum":"  237","line":"                .ifTrue = EmitTestCase.makeNode(.Int, \"3\"),","class":"lineCov","hits":"1","order":"5388","possible_hits":"1",},
{"lineNum":"  238","line":"                .ifFalse = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"5389","possible_hits":"1",},
{"lineNum":"  239","line":"            },"},
{"lineNum":"  240","line":"        ),"},
{"lineNum":"  241","line":"        .expectedOutput = \"(a?3:false);\\n\",","class":"lineCov","hits":"1","order":"5391","possible_hits":"1",},
{"lineNum":"  242","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5392","possible_hits":"1",},
{"lineNum":"  243","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5402","possible_hits":"2",},
{"lineNum":"  244","line":"                alloc.destroy(nd.data.Ternary.cond);","class":"linePartCov","hits":"1","order":"5403","possible_hits":"2",},
{"lineNum":"  245","line":"                alloc.destroy(nd.data.Ternary.ifTrue);","class":"linePartCov","hits":"2","order":"5404","possible_hits":"3",},
{"lineNum":"  246","line":"                alloc.destroy(nd.data.Ternary.ifFalse);","class":"linePartCov","hits":"2","order":"5405","possible_hits":"3",},
{"lineNum":"  247","line":"            }"},
{"lineNum":"  248","line":"        }).cleanup,"},
{"lineNum":"  249","line":"    }).run();","class":"lineCov","hits":"1","order":"5393","possible_hits":"1",},
{"lineNum":"  250","line":"}"},
{"lineNum":"  251","line":""},
{"lineNum":"  252","line":"test \"JsBackend can emit function call expression\" {","class":"lineCov","hits":"2","order":"5407","possible_hits":"2",},
{"lineNum":"  253","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5431","possible_hits":"1",},
{"lineNum":"  254","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5413","possible_hits":"1",},
{"lineNum":"  255","line":"            .Call,"},
{"lineNum":"  256","line":"            node.Call{"},
{"lineNum":"  257","line":"                .expr = EmitTestCase.makeNode(.Ident, \"aFunction\"),","class":"lineCov","hits":"1","order":"5408","possible_hits":"1",},
{"lineNum":"  258","line":"                .args = node.NodeList{","class":"lineCov","hits":"1","order":"5412","possible_hits":"1",},
{"lineNum":"  259","line":"                    .items = &[_]Node{","class":"lineCov","hits":"1","order":"5411","possible_hits":"1",},
{"lineNum":"  260","line":"                        EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"5409","possible_hits":"1",},
{"lineNum":"  261","line":"                        EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"5410","possible_hits":"1",},
{"lineNum":"  262","line":"                    },"},
{"lineNum":"  263","line":"                },"},
{"lineNum":"  264","line":"            },"},
{"lineNum":"  265","line":"        ),"},
{"lineNum":"  266","line":"        .expectedOutput = \"(aFunction(4, \'a\'));\\n\",","class":"lineCov","hits":"1","order":"5414","possible_hits":"1",},
{"lineNum":"  267","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5415","possible_hits":"1",},
{"lineNum":"  268","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5427","possible_hits":"2",},
{"lineNum":"  269","line":"                alloc.destroy(nd.data.Call.expr);","class":"linePartCov","hits":"1","order":"5428","possible_hits":"2",},
{"lineNum":"  270","line":"                alloc.destroy(nd.data.Call.args.items[0]);","class":"lineCov","hits":"2","order":"5429","possible_hits":"2",},
{"lineNum":"  271","line":"                alloc.destroy(nd.data.Call.args.items[1]);","class":"lineCov","hits":"1","order":"5430","possible_hits":"1",},
{"lineNum":"  272","line":"            }"},
{"lineNum":"  273","line":"        }).cleanup,"},
{"lineNum":"  274","line":"    }).run();","class":"lineCov","hits":"1","order":"5416","possible_hits":"1",},
{"lineNum":"  275","line":"}"},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"test \"JsBackend can emit array literal expression\" {","class":"lineCov","hits":"2","order":"5432","possible_hits":"2",},
{"lineNum":"  278","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5452","possible_hits":"1",},
{"lineNum":"  279","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5438","possible_hits":"1",},
{"lineNum":"  280","line":"            .Array,"},
{"lineNum":"  281","line":"            node.NodeList{","class":"lineCov","hits":"1","order":"5437","possible_hits":"1",},
{"lineNum":"  282","line":"                .items = &[_]Node{","class":"lineCov","hits":"1","order":"5436","possible_hits":"1",},
{"lineNum":"  283","line":"                    EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"5433","possible_hits":"1",},
{"lineNum":"  284","line":"                    EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"5434","possible_hits":"1",},
{"lineNum":"  285","line":"                    EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"5435","possible_hits":"1",},
{"lineNum":"  286","line":"                },"},
{"lineNum":"  287","line":"            },"},
{"lineNum":"  288","line":"        ),"},
{"lineNum":"  289","line":"        .expectedOutput = \"[ 1, \'a\', null, ];\\n\",","class":"lineCov","hits":"1","order":"5439","possible_hits":"1",},
{"lineNum":"  290","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5440","possible_hits":"1",},
{"lineNum":"  291","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5448","possible_hits":"2",},
{"lineNum":"  292","line":"                alloc.destroy(nd.data.Array.items[0]);","class":"lineCov","hits":"1","order":"5449","possible_hits":"1",},
{"lineNum":"  293","line":"                alloc.destroy(nd.data.Array.items[1]);","class":"lineCov","hits":"1","order":"5450","possible_hits":"1",},
{"lineNum":"  294","line":"                alloc.destroy(nd.data.Array.items[2]);","class":"lineCov","hits":"1","order":"5451","possible_hits":"1",},
{"lineNum":"  295","line":"            }"},
{"lineNum":"  296","line":"        }).cleanup,"},
{"lineNum":"  297","line":"    }).run();","class":"lineCov","hits":"1","order":"5441","possible_hits":"1",},
{"lineNum":"  298","line":"}"},
{"lineNum":"  299","line":""},
{"lineNum":"  300","line":"test \"JsBackend can emit array access expression\" {","class":"lineCov","hits":"2","order":"5453","possible_hits":"2",},
{"lineNum":"  301","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5468","possible_hits":"1",},
{"lineNum":"  302","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5456","possible_hits":"1",},
{"lineNum":"  303","line":"            .ArrayAccess,"},
{"lineNum":"  304","line":"            node.ArrayAccess{"},
{"lineNum":"  305","line":"                .expr = EmitTestCase.makeNode(.Ident, \"anArray\"),","class":"lineCov","hits":"1","order":"5454","possible_hits":"1",},
{"lineNum":"  306","line":"                .index = EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"5455","possible_hits":"1",},
{"lineNum":"  307","line":"            },"},
{"lineNum":"  308","line":"        ),"},
{"lineNum":"  309","line":"        .expectedOutput = \"anArray[1];\\n\",","class":"lineCov","hits":"1","order":"5457","possible_hits":"1",},
{"lineNum":"  310","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5458","possible_hits":"1",},
{"lineNum":"  311","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5465","possible_hits":"2",},
{"lineNum":"  312","line":"                alloc.destroy(nd.data.ArrayAccess.expr);","class":"linePartCov","hits":"1","order":"5466","possible_hits":"2",},
{"lineNum":"  313","line":"                alloc.destroy(nd.data.ArrayAccess.index);","class":"linePartCov","hits":"2","order":"5467","possible_hits":"3",},
{"lineNum":"  314","line":"            }"},
{"lineNum":"  315","line":"        }).cleanup,"},
{"lineNum":"  316","line":"    }).run();","class":"lineCov","hits":"1","order":"5459","possible_hits":"1",},
{"lineNum":"  317","line":"}"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"test \"JsBackend can emit object literal expression\" {","class":"lineCov","hits":"2","order":"5469","possible_hits":"2",},
{"lineNum":"  320","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5496","possible_hits":"1",},
{"lineNum":"  321","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5478","possible_hits":"1",},
{"lineNum":"  322","line":"            .Object,"},
{"lineNum":"  323","line":"            node.Object{","class":"lineCov","hits":"1","order":"5477","possible_hits":"1",},
{"lineNum":"  324","line":"                .items = &[_]node.ObjectProperty{","class":"lineCov","hits":"1","order":"5476","possible_hits":"1",},
{"lineNum":"  325","line":"                    node.ObjectProperty.new(","class":"lineCov","hits":"2","order":"5470","possible_hits":"2",},
{"lineNum":"  326","line":"                        EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5471","possible_hits":"1",},
{"lineNum":"  327","line":"                        EmitTestCase.makeNode(.Int, \"0\"),","class":"lineCov","hits":"1","order":"5472","possible_hits":"1",},
{"lineNum":"  328","line":"                    ),"},
{"lineNum":"  329","line":"                    node.ObjectProperty.new(","class":"lineCov","hits":"2","order":"5473","possible_hits":"2",},
{"lineNum":"  330","line":"                        EmitTestCase.makeNode(.String, \"\'b\'\"),","class":"lineCov","hits":"1","order":"5474","possible_hits":"1",},
{"lineNum":"  331","line":"                        EmitTestCase.makeNode(.Float, \"0.0\"),","class":"lineCov","hits":"1","order":"5475","possible_hits":"1",},
{"lineNum":"  332","line":"                    ),"},
{"lineNum":"  333","line":"                },"},
{"lineNum":"  334","line":"            },"},
{"lineNum":"  335","line":"        ),"},
{"lineNum":"  336","line":"        .expectedOutput = \"{ a: 0, \'b\': 0.0, };\\n\",","class":"lineCov","hits":"1","order":"5479","possible_hits":"1",},
{"lineNum":"  337","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5480","possible_hits":"1",},
{"lineNum":"  338","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5491","possible_hits":"2",},
{"lineNum":"  339","line":"                alloc.destroy(nd.data.Object.items[0].key);","class":"lineCov","hits":"1","order":"5492","possible_hits":"1",},
{"lineNum":"  340","line":"                alloc.destroy(nd.data.Object.items[0].value);","class":"lineCov","hits":"1","order":"5493","possible_hits":"1",},
{"lineNum":"  341","line":"                alloc.destroy(nd.data.Object.items[1].key);","class":"lineCov","hits":"1","order":"5494","possible_hits":"1",},
{"lineNum":"  342","line":"                alloc.destroy(nd.data.Object.items[1].value);","class":"lineCov","hits":"1","order":"5495","possible_hits":"1",},
{"lineNum":"  343","line":"            }"},
{"lineNum":"  344","line":"        }).cleanup,"},
{"lineNum":"  345","line":"    }).run();","class":"lineCov","hits":"1","order":"5481","possible_hits":"1",},
{"lineNum":"  346","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2022-01-10 08:51:49", "instrumented" : 214, "covered" : 212,};
var merged_data = [];
