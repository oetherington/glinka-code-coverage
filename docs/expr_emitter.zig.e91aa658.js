var data = {lines:[
{"lineNum":"    1","line":"// glinka"},
{"lineNum":"    2","line":"// Copyright (C) 2021-2022 Ollie Etherington"},
{"lineNum":"    3","line":"// <www.etherington.io>"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// This program is free software: you can redistribute it and/or modify"},
{"lineNum":"    6","line":"// it under the terms of the GNU Affero General Public License as published"},
{"lineNum":"    7","line":"// by the Free Software Foundation, either version 3 of the License, or"},
{"lineNum":"    8","line":"// (at your option) any later version."},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// This program is distributed in the hope that it will be useful,"},
{"lineNum":"   11","line":"// but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   12","line":"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"},
{"lineNum":"   13","line":"// GNU Affero General Public License for more details."},
{"lineNum":"   14","line":"//"},
{"lineNum":"   15","line":"// You should have received a copy of the GNU Affero General Public License"},
{"lineNum":"   16","line":"// along with this program. If not, see <http://www.gnu.org/licenses/>."},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"const std = @import(\"std\");"},
{"lineNum":"   19","line":"const expectEqualStrings = std.testing.expectEqualStrings;"},
{"lineNum":"   20","line":"const expectError = std.testing.expectError;"},
{"lineNum":"   21","line":"const Allocator = std.mem.Allocator;"},
{"lineNum":"   22","line":"const TokenType = @import(\"../../common/token.zig\").Token.Type;"},
{"lineNum":"   23","line":"const node = @import(\"../../common/node.zig\");"},
{"lineNum":"   24","line":"const Node = node.Node;"},
{"lineNum":"   25","line":"const Cursor = @import(\"../../common/cursor.zig\").Cursor;"},
{"lineNum":"   26","line":"const Backend = @import(\"../../common/backend.zig\").Backend;"},
{"lineNum":"   27","line":"const JsBackend = @import(\"js_backend.zig\").JsBackend;"},
{"lineNum":"   28","line":"const EmitTestCase = @import(\"emit_test_case.zig\").EmitTestCase;"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"fn opToString(op: TokenType) error{InvalidOp}![]const u8 {","class":"lineCov","hits":"1","order":"4964","possible_hits":"1",},
{"lineNum":"   31","line":"    return switch (op) {","class":"lineCov","hits":"48","order":"4965","possible_hits":"48",},
{"lineNum":"   32","line":"        .OptionChain => \".?\",","class":"lineCov","hits":"1","order":"5094","possible_hits":"1",},
{"lineNum":"   33","line":"        .Ellipsis => \"...\",","class":"lineCov","hits":"1","order":"5097","possible_hits":"1",},
{"lineNum":"   34","line":"        .Add => \"+\",","class":"lineCov","hits":"1","order":"5000","possible_hits":"1",},
{"lineNum":"   35","line":"        .AddAssign => \"+=\",","class":"lineCov","hits":"1","order":"5100","possible_hits":"1",},
{"lineNum":"   36","line":"        .Inc => \"++\",","class":"lineCov","hits":"1","order":"4966","possible_hits":"1",},
{"lineNum":"   37","line":"        .Sub => \"-\",","class":"lineCov","hits":"1","order":"5103","possible_hits":"1",},
{"lineNum":"   38","line":"        .SubAssign => \"-=\",","class":"lineCov","hits":"1","order":"5105","possible_hits":"1",},
{"lineNum":"   39","line":"        .Dec => \"--\",","class":"lineCov","hits":"1","order":"4984","possible_hits":"1",},
{"lineNum":"   40","line":"        .Mul => \"*\",","class":"lineCov","hits":"1","order":"5108","possible_hits":"1",},
{"lineNum":"   41","line":"        .MulAssign => \"*=\",","class":"lineCov","hits":"1","order":"5110","possible_hits":"1",},
{"lineNum":"   42","line":"        .Pow => \"**\",","class":"lineCov","hits":"1","order":"5112","possible_hits":"1",},
{"lineNum":"   43","line":"        .PowAssign => \"**=\",","class":"lineCov","hits":"1","order":"5114","possible_hits":"1",},
{"lineNum":"   44","line":"        .Div => \"/\",","class":"lineCov","hits":"1","order":"5116","possible_hits":"1",},
{"lineNum":"   45","line":"        .DivAssign => \"/=\",","class":"lineCov","hits":"1","order":"5118","possible_hits":"1",},
{"lineNum":"   46","line":"        .Mod => \"%\",","class":"lineCov","hits":"1","order":"5120","possible_hits":"1",},
{"lineNum":"   47","line":"        .ModAssign => \"%=\",","class":"lineCov","hits":"1","order":"5122","possible_hits":"1",},
{"lineNum":"   48","line":"        .Assign => \"=\",","class":"lineCov","hits":"1","order":"5124","possible_hits":"1",},
{"lineNum":"   49","line":"        .CmpEq => \"==\",","class":"lineCov","hits":"1","order":"5126","possible_hits":"1",},
{"lineNum":"   50","line":"        .CmpStrictEq => \"===\",","class":"lineCov","hits":"1","order":"5128","possible_hits":"1",},
{"lineNum":"   51","line":"        .LogicalNot => \"!\",","class":"lineCov","hits":"1","order":"5130","possible_hits":"1",},
{"lineNum":"   52","line":"        .CmpNotEq => \"!=\",","class":"lineCov","hits":"1","order":"5132","possible_hits":"1",},
{"lineNum":"   53","line":"        .CmpStrictNotEq => \"!==\",","class":"lineCov","hits":"1","order":"5134","possible_hits":"1",},
{"lineNum":"   54","line":"        .CmpGreater => \">\",","class":"lineCov","hits":"1","order":"5136","possible_hits":"1",},
{"lineNum":"   55","line":"        .CmpGreaterEq => \">=\",","class":"lineCov","hits":"1","order":"5138","possible_hits":"1",},
{"lineNum":"   56","line":"        .CmpLess => \"<\",","class":"lineCov","hits":"1","order":"5140","possible_hits":"1",},
{"lineNum":"   57","line":"        .CmpLessEq => \"<=\",","class":"lineCov","hits":"1","order":"5142","possible_hits":"1",},
{"lineNum":"   58","line":"        .Nullish => \"??\",","class":"lineCov","hits":"1","order":"5144","possible_hits":"1",},
{"lineNum":"   59","line":"        .NullishAssign => \"??=\",","class":"lineCov","hits":"1","order":"5146","possible_hits":"1",},
{"lineNum":"   60","line":"        .BitAnd => \"&\",","class":"lineCov","hits":"1","order":"5148","possible_hits":"1",},
{"lineNum":"   61","line":"        .BitAndAssign => \"&=\",","class":"lineCov","hits":"1","order":"5150","possible_hits":"1",},
{"lineNum":"   62","line":"        .LogicalAnd => \"&&\",","class":"lineCov","hits":"1","order":"5152","possible_hits":"1",},
{"lineNum":"   63","line":"        .LogicalAndAssign => \"&&=\",","class":"lineCov","hits":"1","order":"5154","possible_hits":"1",},
{"lineNum":"   64","line":"        .BitOr => \"|\",","class":"lineCov","hits":"1","order":"5156","possible_hits":"1",},
{"lineNum":"   65","line":"        .BitOrAssign => \"|=\",","class":"lineCov","hits":"1","order":"5158","possible_hits":"1",},
{"lineNum":"   66","line":"        .LogicalOr => \"||\",","class":"lineCov","hits":"1","order":"5160","possible_hits":"1",},
{"lineNum":"   67","line":"        .LogicalOrAssign => \"||=\",","class":"lineCov","hits":"1","order":"5162","possible_hits":"1",},
{"lineNum":"   68","line":"        .BitNot => \"~\",","class":"lineCov","hits":"1","order":"5164","possible_hits":"1",},
{"lineNum":"   69","line":"        .BitNotAssign => \"~=\",","class":"lineCov","hits":"1","order":"5166","possible_hits":"1",},
{"lineNum":"   70","line":"        .BitXor => \"^\",","class":"lineCov","hits":"1","order":"5168","possible_hits":"1",},
{"lineNum":"   71","line":"        .BitXorAssign => \"^=\",","class":"lineCov","hits":"1","order":"5170","possible_hits":"1",},
{"lineNum":"   72","line":"        .ShiftRight => \">>\",","class":"lineCov","hits":"1","order":"5172","possible_hits":"1",},
{"lineNum":"   73","line":"        .ShiftRightAssign => \">>=\",","class":"lineCov","hits":"1","order":"5174","possible_hits":"1",},
{"lineNum":"   74","line":"        .ShiftRightUnsigned => \">>>\",","class":"lineCov","hits":"1","order":"5176","possible_hits":"1",},
{"lineNum":"   75","line":"        .ShiftRightUnsignedAssign => \">>>=\",","class":"lineCov","hits":"1","order":"5178","possible_hits":"1",},
{"lineNum":"   76","line":"        .ShiftLeft => \"<<\",","class":"lineCov","hits":"1","order":"5180","possible_hits":"1",},
{"lineNum":"   77","line":"        .ShiftLeftAssign => \"<<=\",","class":"lineCov","hits":"1","order":"5182","possible_hits":"1",},
{"lineNum":"   78","line":"        else => error.InvalidOp,","class":"lineCov","hits":"1","order":"5185","possible_hits":"1",},
{"lineNum":"   79","line":"    };"},
{"lineNum":"   80","line":"}"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"pub fn emitExpr(self: JsBackend, value: Node) Backend.Error!void {","class":"lineCov","hits":"2","order":"4535","possible_hits":"2",},
{"lineNum":"   83","line":"    try switch (value.data) {","class":"lineCov","hits":"16","order":"4536","possible_hits":"16",},
{"lineNum":"   84","line":"        .Ident => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"4686","possible_hits":"1",},
{"lineNum":"   85","line":"        .Int => |i| self.out.print(\"{s}\", .{i}),","class":"lineCov","hits":"1","order":"4652","possible_hits":"1",},
{"lineNum":"   86","line":"        .String => |s| self.out.print(\"{s}\", .{s}),","class":"lineCov","hits":"1","order":"4651","possible_hits":"1",},
{"lineNum":"   87","line":"        .Template => |t| self.out.print(\"{s}\", .{t}),","class":"lineCov","hits":"1","order":"4934","possible_hits":"1",},
{"lineNum":"   88","line":"        .True => self.out.print(\"true\", .{}),","class":"lineCov","hits":"1","order":"4589","possible_hits":"1",},
{"lineNum":"   89","line":"        .False => self.out.print(\"false\", .{}),","class":"lineCov","hits":"1","order":"4611","possible_hits":"1",},
{"lineNum":"   90","line":"        .Null => self.out.print(\"null\", .{}),","class":"lineCov","hits":"1","order":"4537","possible_hits":"1",},
{"lineNum":"   91","line":"        .Undefined => self.out.print(\"undefined\", .{}),","class":"lineCov","hits":"1","order":"4612","possible_hits":"1",},
{"lineNum":"   92","line":"        .PrefixOp => |op| {","class":"lineCov","hits":"2","order":"4962","possible_hits":"2",},
{"lineNum":"   93","line":"            try self.out.print(\"({s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"4963","possible_hits":"1",},
{"lineNum":"   94","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"4967","possible_hits":"1",},
{"lineNum":"   95","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"4968","possible_hits":"1",},
{"lineNum":"   96","line":"        },"},
{"lineNum":"   97","line":"        .PostfixOp => |op| {","class":"lineCov","hits":"2","order":"4980","possible_hits":"2",},
{"lineNum":"   98","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"4981","possible_hits":"1",},
{"lineNum":"   99","line":"            try self.emitExpr(op.expr);","class":"lineCov","hits":"1","order":"4982","possible_hits":"1",},
{"lineNum":"  100","line":"            try self.out.print(\"{s})\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"4983","possible_hits":"1",},
{"lineNum":"  101","line":"        },"},
{"lineNum":"  102","line":"        .BinaryOp => |op| {","class":"lineCov","hits":"2","order":"4996","possible_hits":"2",},
{"lineNum":"  103","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"4997","possible_hits":"1",},
{"lineNum":"  104","line":"            try self.emitExpr(op.left);","class":"lineCov","hits":"1","order":"4998","possible_hits":"1",},
{"lineNum":"  105","line":"            try self.out.print(\"{s}\", .{try opToString(op.op)});","class":"lineCov","hits":"1","order":"4999","possible_hits":"1",},
{"lineNum":"  106","line":"            try self.emitExpr(op.right);","class":"lineCov","hits":"1","order":"5001","possible_hits":"1",},
{"lineNum":"  107","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5002","possible_hits":"1",},
{"lineNum":"  108","line":"        },"},
{"lineNum":"  109","line":"        .Ternary => |trn| {","class":"lineCov","hits":"2","order":"5015","possible_hits":"2",},
{"lineNum":"  110","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5016","possible_hits":"1",},
{"lineNum":"  111","line":"            try self.emitExpr(trn.cond);","class":"lineCov","hits":"1","order":"5017","possible_hits":"1",},
{"lineNum":"  112","line":"            try self.out.print(\"?\", .{});","class":"lineCov","hits":"1","order":"5018","possible_hits":"1",},
{"lineNum":"  113","line":"            try self.emitExpr(trn.ifTrue);","class":"lineCov","hits":"1","order":"5019","possible_hits":"1",},
{"lineNum":"  114","line":"            try self.out.print(\":\", .{});","class":"lineCov","hits":"1","order":"5020","possible_hits":"1",},
{"lineNum":"  115","line":"            try self.emitExpr(trn.ifFalse);","class":"lineCov","hits":"1","order":"5021","possible_hits":"1",},
{"lineNum":"  116","line":"            try self.out.print(\")\", .{});","class":"lineCov","hits":"1","order":"5022","possible_hits":"1",},
{"lineNum":"  117","line":"        },"},
{"lineNum":"  118","line":"        .Call => |call| {","class":"lineCov","hits":"2","order":"5038","possible_hits":"2",},
{"lineNum":"  119","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5039","possible_hits":"1",},
{"lineNum":"  120","line":"            try self.emitExpr(call.expr);","class":"lineCov","hits":"1","order":"5040","possible_hits":"1",},
{"lineNum":"  121","line":"            try self.out.print(\"(\", .{});","class":"lineCov","hits":"1","order":"5041","possible_hits":"1",},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"            var prefix: []const u8 = \"\";","class":"lineCov","hits":"1","order":"5042","possible_hits":"1",},
{"lineNum":"  124","line":"            for (call.args.items) |arg| {","class":"lineCov","hits":"2","order":"5043","possible_hits":"2",},
{"lineNum":"  125","line":"                try self.out.print(\"{s}\", .{prefix});","class":"lineCov","hits":"1","order":"5044","possible_hits":"1",},
{"lineNum":"  126","line":"                try self.emitExpr(arg);","class":"lineCov","hits":"1","order":"5045","possible_hits":"1",},
{"lineNum":"  127","line":"                prefix = \", \";","class":"lineCov","hits":"1","order":"5046","possible_hits":"1",},
{"lineNum":"  128","line":"            }"},
{"lineNum":"  129","line":""},
{"lineNum":"  130","line":"            try self.out.print(\"))\", .{});","class":"lineCov","hits":"1","order":"5047","possible_hits":"1",},
{"lineNum":"  131","line":"        },"},
{"lineNum":"  132","line":"        .Array => |arr| {","class":"lineCov","hits":"2","order":"5063","possible_hits":"2",},
{"lineNum":"  133","line":"            try self.out.print(\"[ \", .{});","class":"lineCov","hits":"1","order":"5064","possible_hits":"1",},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"            for (arr.items) |item| {","class":"lineCov","hits":"2","order":"5065","possible_hits":"2",},
{"lineNum":"  136","line":"                try self.emitExpr(item);","class":"lineCov","hits":"1","order":"5066","possible_hits":"1",},
{"lineNum":"  137","line":"                try self.out.print(\", \", .{});","class":"lineCov","hits":"1","order":"5067","possible_hits":"1",},
{"lineNum":"  138","line":"            }"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"5068","possible_hits":"1",},
{"lineNum":"  141","line":"        },"},
{"lineNum":"  142","line":"        .ArrayAccess => |access| {","class":"lineCov","hits":"2","order":"5081","possible_hits":"2",},
{"lineNum":"  143","line":"            try self.emitExpr(access.expr);","class":"lineCov","hits":"1","order":"5082","possible_hits":"1",},
{"lineNum":"  144","line":"            try self.out.print(\"[\", .{});","class":"lineCov","hits":"1","order":"5083","possible_hits":"1",},
{"lineNum":"  145","line":"            try self.emitExpr(access.index);","class":"lineCov","hits":"1","order":"5084","possible_hits":"1",},
{"lineNum":"  146","line":"            try self.out.print(\"]\", .{});","class":"lineCov","hits":"1","order":"5085","possible_hits":"1",},
{"lineNum":"  147","line":"        },"},
{"lineNum":"  148","line":"        else => std.debug.panic(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  149","line":"            \"Invalid Node type in emitExpr: {?}\","},
{"lineNum":"  150","line":"            .{value},","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  151","line":"        ),"},
{"lineNum":"  152","line":"    };"},
{"lineNum":"  153","line":"}"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"test \"JsBackend can emit ident expression\" {","class":"lineCov","hits":"2","order":"4914","possible_hits":"2",},
{"lineNum":"  156","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4917","possible_hits":"2",},
{"lineNum":"  157","line":"        .inputNode = EmitTestCase.makeNode(.Ident, \"anIdentifier\"),","class":"lineCov","hits":"1","order":"4915","possible_hits":"1",},
{"lineNum":"  158","line":"        .expectedOutput = \"anIdentifier;\\n\",","class":"lineCov","hits":"1","order":"4916","possible_hits":"1",},
{"lineNum":"  159","line":"    }).run();","class":"lineCov","hits":"1","order":"4918","possible_hits":"1",},
{"lineNum":"  160","line":"}"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"test \"JsBackend can emit int expression\" {","class":"lineCov","hits":"2","order":"4919","possible_hits":"2",},
{"lineNum":"  163","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4922","possible_hits":"2",},
{"lineNum":"  164","line":"        .inputNode = EmitTestCase.makeNode(.Int, \"123\"),","class":"lineCov","hits":"1","order":"4920","possible_hits":"1",},
{"lineNum":"  165","line":"        .expectedOutput = \"123;\\n\",","class":"lineCov","hits":"1","order":"4921","possible_hits":"1",},
{"lineNum":"  166","line":"    }).run();","class":"lineCov","hits":"1","order":"4923","possible_hits":"1",},
{"lineNum":"  167","line":"}"},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"test \"JsBackend can emit string expression\" {","class":"lineCov","hits":"2","order":"4924","possible_hits":"2",},
{"lineNum":"  170","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4927","possible_hits":"2",},
{"lineNum":"  171","line":"        .inputNode = EmitTestCase.makeNode(.String, \"\'a test string\'\"),","class":"lineCov","hits":"1","order":"4925","possible_hits":"1",},
{"lineNum":"  172","line":"        .expectedOutput = \"\'a test string\';\\n\",","class":"lineCov","hits":"1","order":"4926","possible_hits":"1",},
{"lineNum":"  173","line":"    }).run();","class":"lineCov","hits":"1","order":"4928","possible_hits":"1",},
{"lineNum":"  174","line":"}"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"test \"JsBackend can emit template expression\" {","class":"lineCov","hits":"2","order":"4929","possible_hits":"2",},
{"lineNum":"  177","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4932","possible_hits":"2",},
{"lineNum":"  178","line":"        .inputNode = EmitTestCase.makeNode(.Template, \"`a test template`\"),","class":"lineCov","hits":"1","order":"4930","possible_hits":"1",},
{"lineNum":"  179","line":"        .expectedOutput = \"`a test template`;\\n\",","class":"lineCov","hits":"1","order":"4931","possible_hits":"1",},
{"lineNum":"  180","line":"    }).run();","class":"lineCov","hits":"1","order":"4933","possible_hits":"1",},
{"lineNum":"  181","line":"}"},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"test \"JsBackend can emit \'true\' expression\" {","class":"lineCov","hits":"2","order":"4935","possible_hits":"2",},
{"lineNum":"  184","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4938","possible_hits":"2",},
{"lineNum":"  185","line":"        .inputNode = EmitTestCase.makeNode(.True, {}),","class":"lineCov","hits":"1","order":"4936","possible_hits":"1",},
{"lineNum":"  186","line":"        .expectedOutput = \"true;\\n\",","class":"lineCov","hits":"1","order":"4937","possible_hits":"1",},
{"lineNum":"  187","line":"    }).run();","class":"lineCov","hits":"1","order":"4939","possible_hits":"1",},
{"lineNum":"  188","line":"}"},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"test \"JsBackend can emit \'false\' expression\" {","class":"lineCov","hits":"2","order":"4940","possible_hits":"2",},
{"lineNum":"  191","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4943","possible_hits":"2",},
{"lineNum":"  192","line":"        .inputNode = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"4941","possible_hits":"1",},
{"lineNum":"  193","line":"        .expectedOutput = \"false;\\n\",","class":"lineCov","hits":"1","order":"4942","possible_hits":"1",},
{"lineNum":"  194","line":"    }).run();","class":"lineCov","hits":"1","order":"4944","possible_hits":"1",},
{"lineNum":"  195","line":"}"},
{"lineNum":"  196","line":""},
{"lineNum":"  197","line":"test \"JsBackend can emit \'null\' expression\" {","class":"lineCov","hits":"2","order":"4945","possible_hits":"2",},
{"lineNum":"  198","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4948","possible_hits":"2",},
{"lineNum":"  199","line":"        .inputNode = EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"4946","possible_hits":"1",},
{"lineNum":"  200","line":"        .expectedOutput = \"null;\\n\",","class":"lineCov","hits":"1","order":"4947","possible_hits":"1",},
{"lineNum":"  201","line":"    }).run();","class":"lineCov","hits":"1","order":"4949","possible_hits":"1",},
{"lineNum":"  202","line":"}"},
{"lineNum":"  203","line":""},
{"lineNum":"  204","line":"test \"JsBackend can emit \'undefined\' expression\" {","class":"lineCov","hits":"2","order":"4950","possible_hits":"2",},
{"lineNum":"  205","line":"    try (EmitTestCase{","class":"lineCov","hits":"2","order":"4953","possible_hits":"2",},
{"lineNum":"  206","line":"        .inputNode = EmitTestCase.makeNode(.Undefined, {}),","class":"lineCov","hits":"1","order":"4951","possible_hits":"1",},
{"lineNum":"  207","line":"        .expectedOutput = \"undefined;\\n\",","class":"lineCov","hits":"1","order":"4952","possible_hits":"1",},
{"lineNum":"  208","line":"    }).run();","class":"lineCov","hits":"1","order":"4954","possible_hits":"1",},
{"lineNum":"  209","line":"}"},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"test \"JsBackend can emit prefix op expression\" {","class":"lineCov","hits":"2","order":"4955","possible_hits":"2",},
{"lineNum":"  212","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"4972","possible_hits":"1",},
{"lineNum":"  213","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"4958","possible_hits":"1",},
{"lineNum":"  214","line":"            .PrefixOp,"},
{"lineNum":"  215","line":"            node.UnaryOp{"},
{"lineNum":"  216","line":"                .op = .Inc,","class":"lineCov","hits":"1","order":"4957","possible_hits":"1",},
{"lineNum":"  217","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"4956","possible_hits":"1",},
{"lineNum":"  218","line":"            },"},
{"lineNum":"  219","line":"        ),"},
{"lineNum":"  220","line":"        .expectedOutput = \"(++a);\\n\",","class":"lineCov","hits":"1","order":"4959","possible_hits":"1",},
{"lineNum":"  221","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"4960","possible_hits":"1",},
{"lineNum":"  222","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"4970","possible_hits":"2",},
{"lineNum":"  223","line":"                alloc.destroy(nd.data.PrefixOp.expr);","class":"linePartCov","hits":"1","order":"4971","possible_hits":"2",},
{"lineNum":"  224","line":"            }"},
{"lineNum":"  225","line":"        }).cleanup,"},
{"lineNum":"  226","line":"    }).run();","class":"lineCov","hits":"1","order":"4961","possible_hits":"1",},
{"lineNum":"  227","line":"}"},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"test \"JsBackend can emit postfix op expression\" {","class":"lineCov","hits":"2","order":"4973","possible_hits":"2",},
{"lineNum":"  230","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"4987","possible_hits":"1",},
{"lineNum":"  231","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"4976","possible_hits":"1",},
{"lineNum":"  232","line":"            .PostfixOp,"},
{"lineNum":"  233","line":"            node.UnaryOp{"},
{"lineNum":"  234","line":"                .op = .Dec,","class":"lineCov","hits":"1","order":"4975","possible_hits":"1",},
{"lineNum":"  235","line":"                .expr = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"4974","possible_hits":"1",},
{"lineNum":"  236","line":"            },"},
{"lineNum":"  237","line":"        ),"},
{"lineNum":"  238","line":"        .expectedOutput = \"(a--);\\n\",","class":"lineCov","hits":"1","order":"4977","possible_hits":"1",},
{"lineNum":"  239","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"4978","possible_hits":"1",},
{"lineNum":"  240","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"4985","possible_hits":"2",},
{"lineNum":"  241","line":"                alloc.destroy(nd.data.PostfixOp.expr);","class":"linePartCov","hits":"1","order":"4986","possible_hits":"2",},
{"lineNum":"  242","line":"            }"},
{"lineNum":"  243","line":"        }).cleanup,"},
{"lineNum":"  244","line":"    }).run();","class":"lineCov","hits":"1","order":"4979","possible_hits":"1",},
{"lineNum":"  245","line":"}"},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"test \"JsBackend can emit binary op expression\" {","class":"lineCov","hits":"2","order":"4988","possible_hits":"2",},
{"lineNum":"  248","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5006","possible_hits":"1",},
{"lineNum":"  249","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"4992","possible_hits":"1",},
{"lineNum":"  250","line":"            .BinaryOp,"},
{"lineNum":"  251","line":"            node.BinaryOp{"},
{"lineNum":"  252","line":"                .op = .Add,","class":"lineCov","hits":"1","order":"4991","possible_hits":"1",},
{"lineNum":"  253","line":"                .left = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"4989","possible_hits":"1",},
{"lineNum":"  254","line":"                .right = EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"4990","possible_hits":"1",},
{"lineNum":"  255","line":"            },"},
{"lineNum":"  256","line":"        ),"},
{"lineNum":"  257","line":"        .expectedOutput = \"(a+4);\\n\",","class":"lineCov","hits":"1","order":"4993","possible_hits":"1",},
{"lineNum":"  258","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"4994","possible_hits":"1",},
{"lineNum":"  259","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5003","possible_hits":"2",},
{"lineNum":"  260","line":"                alloc.destroy(nd.data.BinaryOp.left);","class":"linePartCov","hits":"1","order":"5004","possible_hits":"2",},
{"lineNum":"  261","line":"                alloc.destroy(nd.data.BinaryOp.right);","class":"linePartCov","hits":"2","order":"5005","possible_hits":"3",},
{"lineNum":"  262","line":"            }"},
{"lineNum":"  263","line":"        }).cleanup,"},
{"lineNum":"  264","line":"    }).run();","class":"lineCov","hits":"1","order":"4995","possible_hits":"1",},
{"lineNum":"  265","line":"}"},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"test \"JsBackend can emit ternary expression\" {","class":"lineCov","hits":"2","order":"5007","possible_hits":"2",},
{"lineNum":"  268","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5027","possible_hits":"1",},
{"lineNum":"  269","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5011","possible_hits":"1",},
{"lineNum":"  270","line":"            .Ternary,"},
{"lineNum":"  271","line":"            node.Ternary{"},
{"lineNum":"  272","line":"                .cond = EmitTestCase.makeNode(.Ident, \"a\"),","class":"lineCov","hits":"1","order":"5008","possible_hits":"1",},
{"lineNum":"  273","line":"                .ifTrue = EmitTestCase.makeNode(.Int, \"3\"),","class":"lineCov","hits":"1","order":"5009","possible_hits":"1",},
{"lineNum":"  274","line":"                .ifFalse = EmitTestCase.makeNode(.False, {}),","class":"lineCov","hits":"1","order":"5010","possible_hits":"1",},
{"lineNum":"  275","line":"            },"},
{"lineNum":"  276","line":"        ),"},
{"lineNum":"  277","line":"        .expectedOutput = \"(a?3:false);\\n\",","class":"lineCov","hits":"1","order":"5012","possible_hits":"1",},
{"lineNum":"  278","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5013","possible_hits":"1",},
{"lineNum":"  279","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5023","possible_hits":"2",},
{"lineNum":"  280","line":"                alloc.destroy(nd.data.Ternary.cond);","class":"linePartCov","hits":"1","order":"5024","possible_hits":"2",},
{"lineNum":"  281","line":"                alloc.destroy(nd.data.Ternary.ifTrue);","class":"linePartCov","hits":"2","order":"5025","possible_hits":"3",},
{"lineNum":"  282","line":"                alloc.destroy(nd.data.Ternary.ifFalse);","class":"linePartCov","hits":"2","order":"5026","possible_hits":"3",},
{"lineNum":"  283","line":"            }"},
{"lineNum":"  284","line":"        }).cleanup,"},
{"lineNum":"  285","line":"    }).run();","class":"lineCov","hits":"1","order":"5014","possible_hits":"1",},
{"lineNum":"  286","line":"}"},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"test \"JsBackend can emit function call expression\" {","class":"lineCov","hits":"2","order":"5028","possible_hits":"2",},
{"lineNum":"  289","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5052","possible_hits":"1",},
{"lineNum":"  290","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5034","possible_hits":"1",},
{"lineNum":"  291","line":"            .Call,"},
{"lineNum":"  292","line":"            node.Call{"},
{"lineNum":"  293","line":"                .expr = EmitTestCase.makeNode(.Ident, \"aFunction\"),","class":"lineCov","hits":"1","order":"5029","possible_hits":"1",},
{"lineNum":"  294","line":"                .args = node.NodeList{","class":"lineCov","hits":"1","order":"5033","possible_hits":"1",},
{"lineNum":"  295","line":"                    .items = &[_]Node{","class":"lineCov","hits":"1","order":"5032","possible_hits":"1",},
{"lineNum":"  296","line":"                        EmitTestCase.makeNode(.Int, \"4\"),","class":"lineCov","hits":"1","order":"5030","possible_hits":"1",},
{"lineNum":"  297","line":"                        EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"5031","possible_hits":"1",},
{"lineNum":"  298","line":"                    },"},
{"lineNum":"  299","line":"                },"},
{"lineNum":"  300","line":"            },"},
{"lineNum":"  301","line":"        ),"},
{"lineNum":"  302","line":"        .expectedOutput = \"(aFunction(4, \'a\'));\\n\",","class":"lineCov","hits":"1","order":"5035","possible_hits":"1",},
{"lineNum":"  303","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5036","possible_hits":"1",},
{"lineNum":"  304","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5048","possible_hits":"2",},
{"lineNum":"  305","line":"                alloc.destroy(nd.data.Call.expr);","class":"linePartCov","hits":"1","order":"5049","possible_hits":"2",},
{"lineNum":"  306","line":"                alloc.destroy(nd.data.Call.args.items[0]);","class":"lineCov","hits":"2","order":"5050","possible_hits":"2",},
{"lineNum":"  307","line":"                alloc.destroy(nd.data.Call.args.items[1]);","class":"lineCov","hits":"1","order":"5051","possible_hits":"1",},
{"lineNum":"  308","line":"            }"},
{"lineNum":"  309","line":"        }).cleanup,"},
{"lineNum":"  310","line":"    }).run();","class":"lineCov","hits":"1","order":"5037","possible_hits":"1",},
{"lineNum":"  311","line":"}"},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"test \"JsBackend can emit array literal expression\" {","class":"lineCov","hits":"2","order":"5053","possible_hits":"2",},
{"lineNum":"  314","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5073","possible_hits":"1",},
{"lineNum":"  315","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5059","possible_hits":"1",},
{"lineNum":"  316","line":"            .Array,"},
{"lineNum":"  317","line":"            node.NodeList{","class":"lineCov","hits":"1","order":"5058","possible_hits":"1",},
{"lineNum":"  318","line":"                .items = &[_]Node{","class":"lineCov","hits":"1","order":"5057","possible_hits":"1",},
{"lineNum":"  319","line":"                    EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"5054","possible_hits":"1",},
{"lineNum":"  320","line":"                    EmitTestCase.makeNode(.String, \"\'a\'\"),","class":"lineCov","hits":"1","order":"5055","possible_hits":"1",},
{"lineNum":"  321","line":"                    EmitTestCase.makeNode(.Null, {}),","class":"lineCov","hits":"1","order":"5056","possible_hits":"1",},
{"lineNum":"  322","line":"                },"},
{"lineNum":"  323","line":"            },"},
{"lineNum":"  324","line":"        ),"},
{"lineNum":"  325","line":"        .expectedOutput = \"[ 1, \'a\', null, ];\\n\",","class":"lineCov","hits":"1","order":"5060","possible_hits":"1",},
{"lineNum":"  326","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5061","possible_hits":"1",},
{"lineNum":"  327","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5069","possible_hits":"2",},
{"lineNum":"  328","line":"                alloc.destroy(nd.data.Array.items[0]);","class":"lineCov","hits":"1","order":"5070","possible_hits":"1",},
{"lineNum":"  329","line":"                alloc.destroy(nd.data.Array.items[1]);","class":"lineCov","hits":"1","order":"5071","possible_hits":"1",},
{"lineNum":"  330","line":"                alloc.destroy(nd.data.Array.items[2]);","class":"lineCov","hits":"1","order":"5072","possible_hits":"1",},
{"lineNum":"  331","line":"            }"},
{"lineNum":"  332","line":"        }).cleanup,"},
{"lineNum":"  333","line":"    }).run();","class":"lineCov","hits":"1","order":"5062","possible_hits":"1",},
{"lineNum":"  334","line":"}"},
{"lineNum":"  335","line":""},
{"lineNum":"  336","line":"test \"JsBackend can emit array access expression\" {","class":"lineCov","hits":"2","order":"5074","possible_hits":"2",},
{"lineNum":"  337","line":"    try (EmitTestCase{","class":"lineCov","hits":"1","order":"5089","possible_hits":"1",},
{"lineNum":"  338","line":"        .inputNode = EmitTestCase.makeNode(","class":"lineCov","hits":"1","order":"5077","possible_hits":"1",},
{"lineNum":"  339","line":"            .ArrayAccess,"},
{"lineNum":"  340","line":"            node.ArrayAccess{"},
{"lineNum":"  341","line":"                .expr = EmitTestCase.makeNode(.Ident, \"anArray\"),","class":"lineCov","hits":"1","order":"5075","possible_hits":"1",},
{"lineNum":"  342","line":"                .index = EmitTestCase.makeNode(.Int, \"1\"),","class":"lineCov","hits":"1","order":"5076","possible_hits":"1",},
{"lineNum":"  343","line":"            },"},
{"lineNum":"  344","line":"        ),"},
{"lineNum":"  345","line":"        .expectedOutput = \"anArray[1];\\n\",","class":"lineCov","hits":"1","order":"5078","possible_hits":"1",},
{"lineNum":"  346","line":"        .cleanup = (struct {","class":"lineCov","hits":"1","order":"5079","possible_hits":"1",},
{"lineNum":"  347","line":"            fn cleanup(alloc: Allocator, nd: Node) void {","class":"lineCov","hits":"2","order":"5086","possible_hits":"2",},
{"lineNum":"  348","line":"                alloc.destroy(nd.data.ArrayAccess.expr);","class":"linePartCov","hits":"1","order":"5087","possible_hits":"2",},
{"lineNum":"  349","line":"                alloc.destroy(nd.data.ArrayAccess.index);","class":"linePartCov","hits":"2","order":"5088","possible_hits":"3",},
{"lineNum":"  350","line":"            }"},
{"lineNum":"  351","line":"        }).cleanup,"},
{"lineNum":"  352","line":"    }).run();","class":"lineCov","hits":"1","order":"5080","possible_hits":"1",},
{"lineNum":"  353","line":"}"},
{"lineNum":"  354","line":""},
{"lineNum":"  355","line":"test \"JSBackend can convert operators to strings\" {","class":"lineCov","hits":"2","order":"5090","possible_hits":"2",},
{"lineNum":"  356","line":"    const TestCase = struct {"},
{"lineNum":"  357","line":"        pub fn run(ty: TokenType, expected: []const u8) !void {","class":"lineCov","hits":"2","order":"5092","possible_hits":"2",},
{"lineNum":"  358","line":"            const str = try opToString(ty);","class":"lineCov","hits":"1","order":"5093","possible_hits":"1",},
{"lineNum":"  359","line":"            try expectEqualStrings(expected, str);","class":"lineCov","hits":"1","order":"5095","possible_hits":"1",},
{"lineNum":"  360","line":"        }"},
{"lineNum":"  361","line":"    };"},
{"lineNum":"  362","line":""},
{"lineNum":"  363","line":"    try TestCase.run(.OptionChain, \".?\");","class":"lineCov","hits":"1","order":"5091","possible_hits":"1",},
{"lineNum":"  364","line":"    try TestCase.run(.Ellipsis, \"...\");","class":"lineCov","hits":"1","order":"5096","possible_hits":"1",},
{"lineNum":"  365","line":"    try TestCase.run(.Add, \"+\");","class":"lineCov","hits":"1","order":"5098","possible_hits":"1",},
{"lineNum":"  366","line":"    try TestCase.run(.AddAssign, \"+=\");","class":"lineCov","hits":"1","order":"5099","possible_hits":"1",},
{"lineNum":"  367","line":"    try TestCase.run(.Inc, \"++\");","class":"lineCov","hits":"1","order":"5101","possible_hits":"1",},
{"lineNum":"  368","line":"    try TestCase.run(.Sub, \"-\");","class":"lineCov","hits":"1","order":"5102","possible_hits":"1",},
{"lineNum":"  369","line":"    try TestCase.run(.SubAssign, \"-=\");","class":"lineCov","hits":"1","order":"5104","possible_hits":"1",},
{"lineNum":"  370","line":"    try TestCase.run(.Dec, \"--\");","class":"lineCov","hits":"1","order":"5106","possible_hits":"1",},
{"lineNum":"  371","line":"    try TestCase.run(.Mul, \"*\");","class":"lineCov","hits":"1","order":"5107","possible_hits":"1",},
{"lineNum":"  372","line":"    try TestCase.run(.MulAssign, \"*=\");","class":"lineCov","hits":"1","order":"5109","possible_hits":"1",},
{"lineNum":"  373","line":"    try TestCase.run(.Pow, \"**\");","class":"lineCov","hits":"1","order":"5111","possible_hits":"1",},
{"lineNum":"  374","line":"    try TestCase.run(.PowAssign, \"**=\");","class":"lineCov","hits":"1","order":"5113","possible_hits":"1",},
{"lineNum":"  375","line":"    try TestCase.run(.Div, \"/\");","class":"lineCov","hits":"1","order":"5115","possible_hits":"1",},
{"lineNum":"  376","line":"    try TestCase.run(.DivAssign, \"/=\");","class":"lineCov","hits":"1","order":"5117","possible_hits":"1",},
{"lineNum":"  377","line":"    try TestCase.run(.Mod, \"%\");","class":"lineCov","hits":"1","order":"5119","possible_hits":"1",},
{"lineNum":"  378","line":"    try TestCase.run(.ModAssign, \"%=\");","class":"lineCov","hits":"1","order":"5121","possible_hits":"1",},
{"lineNum":"  379","line":"    try TestCase.run(.Assign, \"=\");","class":"lineCov","hits":"1","order":"5123","possible_hits":"1",},
{"lineNum":"  380","line":"    try TestCase.run(.CmpEq, \"==\");","class":"lineCov","hits":"1","order":"5125","possible_hits":"1",},
{"lineNum":"  381","line":"    try TestCase.run(.CmpStrictEq, \"===\");","class":"lineCov","hits":"1","order":"5127","possible_hits":"1",},
{"lineNum":"  382","line":"    try TestCase.run(.LogicalNot, \"!\");","class":"lineCov","hits":"1","order":"5129","possible_hits":"1",},
{"lineNum":"  383","line":"    try TestCase.run(.CmpNotEq, \"!=\");","class":"lineCov","hits":"1","order":"5131","possible_hits":"1",},
{"lineNum":"  384","line":"    try TestCase.run(.CmpStrictNotEq, \"!==\");","class":"lineCov","hits":"1","order":"5133","possible_hits":"1",},
{"lineNum":"  385","line":"    try TestCase.run(.CmpGreater, \">\");","class":"lineCov","hits":"1","order":"5135","possible_hits":"1",},
{"lineNum":"  386","line":"    try TestCase.run(.CmpGreaterEq, \">=\");","class":"lineCov","hits":"1","order":"5137","possible_hits":"1",},
{"lineNum":"  387","line":"    try TestCase.run(.CmpLess, \"<\");","class":"lineCov","hits":"1","order":"5139","possible_hits":"1",},
{"lineNum":"  388","line":"    try TestCase.run(.CmpLessEq, \"<=\");","class":"lineCov","hits":"1","order":"5141","possible_hits":"1",},
{"lineNum":"  389","line":"    try TestCase.run(.Nullish, \"??\");","class":"lineCov","hits":"1","order":"5143","possible_hits":"1",},
{"lineNum":"  390","line":"    try TestCase.run(.NullishAssign, \"??=\");","class":"lineCov","hits":"1","order":"5145","possible_hits":"1",},
{"lineNum":"  391","line":"    try TestCase.run(.BitAnd, \"&\");","class":"lineCov","hits":"1","order":"5147","possible_hits":"1",},
{"lineNum":"  392","line":"    try TestCase.run(.BitAndAssign, \"&=\");","class":"lineCov","hits":"1","order":"5149","possible_hits":"1",},
{"lineNum":"  393","line":"    try TestCase.run(.LogicalAnd, \"&&\");","class":"lineCov","hits":"1","order":"5151","possible_hits":"1",},
{"lineNum":"  394","line":"    try TestCase.run(.LogicalAndAssign, \"&&=\");","class":"lineCov","hits":"1","order":"5153","possible_hits":"1",},
{"lineNum":"  395","line":"    try TestCase.run(.BitOr, \"|\");","class":"lineCov","hits":"1","order":"5155","possible_hits":"1",},
{"lineNum":"  396","line":"    try TestCase.run(.BitOrAssign, \"|=\");","class":"lineCov","hits":"1","order":"5157","possible_hits":"1",},
{"lineNum":"  397","line":"    try TestCase.run(.LogicalOr, \"||\");","class":"lineCov","hits":"1","order":"5159","possible_hits":"1",},
{"lineNum":"  398","line":"    try TestCase.run(.LogicalOrAssign, \"||=\");","class":"lineCov","hits":"1","order":"5161","possible_hits":"1",},
{"lineNum":"  399","line":"    try TestCase.run(.BitNot, \"~\");","class":"lineCov","hits":"1","order":"5163","possible_hits":"1",},
{"lineNum":"  400","line":"    try TestCase.run(.BitNotAssign, \"~=\");","class":"lineCov","hits":"1","order":"5165","possible_hits":"1",},
{"lineNum":"  401","line":"    try TestCase.run(.BitXor, \"^\");","class":"lineCov","hits":"1","order":"5167","possible_hits":"1",},
{"lineNum":"  402","line":"    try TestCase.run(.BitXorAssign, \"^=\");","class":"lineCov","hits":"1","order":"5169","possible_hits":"1",},
{"lineNum":"  403","line":"    try TestCase.run(.ShiftRight, \">>\");","class":"lineCov","hits":"1","order":"5171","possible_hits":"1",},
{"lineNum":"  404","line":"    try TestCase.run(.ShiftRightAssign, \">>=\");","class":"lineCov","hits":"1","order":"5173","possible_hits":"1",},
{"lineNum":"  405","line":"    try TestCase.run(.ShiftRightUnsigned, \">>>\");","class":"lineCov","hits":"1","order":"5175","possible_hits":"1",},
{"lineNum":"  406","line":"    try TestCase.run(.ShiftRightUnsignedAssign, \">>>=\");","class":"lineCov","hits":"1","order":"5177","possible_hits":"1",},
{"lineNum":"  407","line":"    try TestCase.run(.ShiftLeft, \"<<\");","class":"lineCov","hits":"1","order":"5179","possible_hits":"1",},
{"lineNum":"  408","line":"    try TestCase.run(.ShiftLeftAssign, \"<<=\");","class":"lineCov","hits":"1","order":"5181","possible_hits":"1",},
{"lineNum":"  409","line":"}"},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"test \"JSBackend throws an error for invalid operators\" {","class":"lineCov","hits":"2","order":"5183","possible_hits":"2",},
{"lineNum":"  412","line":"    const ty = TokenType.LBrace;"},
{"lineNum":"  413","line":"    const result = opToString(ty);","class":"lineCov","hits":"1","order":"5184","possible_hits":"1",},
{"lineNum":"  414","line":"    try expectError(error.InvalidOp, result);","class":"lineCov","hits":"1","order":"5186","possible_hits":"1",},
{"lineNum":"  415","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2021-12-31 18:16:32", "instrumented" : 283, "covered" : 281,};
var merged_data = [];
